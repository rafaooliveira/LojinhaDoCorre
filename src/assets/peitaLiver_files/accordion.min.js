"use strict";Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,o){if(null==this)throw new TypeError('"this" is null or not defined');var r=Object(this),t=r.length>>>0;if(0===t)return!1;for(var n=0|o,i=Math.max(n>=0?n:t-Math.abs(n),0);i<t;){if(r[i]===e)return!0;i++}return!1}}),function(e,o){function r(e,r){window.freedom.addClass(e,"active"),window.freedom.addClass(r,"opened"),setTimeout(function(){o.querySelector("html  .desktop")||window.freedom.jumpPageToAnchor(r.id)},100)}function t(e){for(var o=e.closest("ul"),r=o.querySelectorAll("[data-accordion] > li"),t=0;t<r.length;t++){var n=r[t]?r[t]:null,i=!!n&&n.className.split(" ").includes("opened");if(i){var l=r[t+1];if(l){l.querySelector("[data-accordion] li > .title").click();break}}}}function n(e){window.freedom.removeClass(e,"opened")}function i(e){var o=e.length;if(o>0)for(;o--;)n(e[o])}function l(o){o.preventDefault();var t=o.target,l=t.closest("li"),d=t.closest("ul"),a=d.querySelectorAll("[data-accordion] > li"),c=window.freedom.hasClass(d,"close-others"),u=window.freedom.hasClass(l,"opened"),s=l.querySelectorAll(".content");return 0===s.length?void(e.location.href=l.querySelector("a").href):(c&&i(a),void(u?n(l):r(d,l)))}e.freedom.live("[data-accordion] li > .title","click",l),e.freedom.nsPubSub.pub("accordion.loaded"),e.freedom.nsPubSub.sub("accordion.open",r),e.freedom.nsPubSub.sub("accordion.openNext",t)}(window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
