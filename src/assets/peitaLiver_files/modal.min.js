"use strict";!function(){function e(e,t){var o=u.visible,a=document.querySelector('[data-modal-target="'+e+'"]');return t?(window.freedom.addClass(document.body,u.enabled),window.freedom.addClass(a,o),c.pub("overlay.display","show"),void c.pub("modal.opened")):(window.freedom.removeClass(a,o),window.freedom.removeClass(document.body,u.enabled),c.pub("overlay.display","hide"),void c.pub("modal.closed"))}function t(t){t.preventDefault();var o=t.currentTarget,a=o.getAttribute("data-modal-trigger"),r=o.getAttribute("data-ajax-modal");r||e(a,!0)}function o(t){t.preventDefault();var o=t.currentTarget,a=o.getAttribute("data-modal-close")||o.getAttribute("data-modal-target");e(a)}function a(e,t){for(;(e=e.parentElement)&&!e.classList.contains(t););return e}function r(t){if(!a(t.target,u.modal)){var o=this.getAttribute("data-modal-close")||this.getAttribute("data-modal-target");e(o)}}function d(e,a){setTimeout(function(){a.forEach(function(e){var t=e.querySelector("[data-modal-close]");t&&t.addEventListener("click",o),window.freedom.hasClass(e,"click-overlay-close")&&e.addEventListener("click",r)}),e.addEventListener("click",t)},0)}function n(e,t){var o=null,a="[data-modal-target"+(t?'="'+t+'"':"]");o=window.freedom.nodeListToArray(document.querySelectorAll(a)),e.forEach(function(e){var a=o.filter(function(o){var a=t||e.getAttribute("data-modal-trigger");return o.getAttribute("data-modal-target")===a});d(e,a)})}function i(){var e="[data-modal-trigger]",t=window.freedom.nodeListToArray(document.querySelectorAll(e));n(t)}function l(e){var a="[data-modal-trigger"+(e?'="'+e+'"':"]"),r="[data-modal-close"+(e?'="'+e+'"':"]"),d=document.querySelectorAll(a),i=document.querySelectorAll(r);d=window.freedom.nodeListToArray(d),i=window.freedom.nodeListToArray(i),i.forEach(function(e){e.removeEventListener("click",o)}),d.forEach(function(e){e.removeEventListener("click",t)}),n(d,e)}var c=window.freedom.nsPubSub,u={modal:"tingle-modal",visible:"tingle-modal--visible",enabled:"tingle-enabled"};!function(){i(),c.sub("modal.toggle",e),c.sub("modal.restart",l)}()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9fYmVoYXZpb3IvbW9kYWwvZGVza3RvcC9tb2RhbC5taW4uanMiXSwibmFtZXMiOlsidG9nZ2xlIiwidGFyZ2V0TmFtZSIsIm9wZW4iLCJvcGVuQ2xhc3MiLCJUSU5HTEUiLCJ2aXNpYmxlIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiZnJlZWRvbSIsImFkZENsYXNzIiwiYm9keSIsImVuYWJsZWQiLCJQVUJTVUIiLCJwdWIiLCJyZW1vdmVDbGFzcyIsInRyaWdnZXJDbGlja0hhbmRsZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidHJpZ2dlciIsImN1cnJlbnRUYXJnZXQiLCJnZXRBdHRyaWJ1dGUiLCJhamF4TW9kYWwiLCJjbG9zZUNsaWNrSGFuZGxlciIsImNsb3NlIiwiZmluZEFuY2VzdG9yIiwiZWwiLCJjbHMiLCJwYXJlbnRFbGVtZW50IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJoYW5kbGVDbGlja091dHNpZGUiLCJtb2RhbCIsInRoaXMiLCJtb2RhbEluaXQiLCJ0YXJnZXRzIiwic2V0VGltZW91dCIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiaGFzQ2xhc3MiLCJncm91cEVsZW1lbnRzQnlUYXJnZXROYW1lIiwidHJpZ2dlcnMiLCJ0YXJnZXRBdHRyIiwibm9kZUxpc3RUb0FycmF5IiwicXVlcnlTZWxlY3RvckFsbCIsImZpbHRlcmVkVGFyZ2V0cyIsImZpbHRlciIsIm5ld1RhcmdldE5hbWUiLCJzZXRMaXN0ZW5lcnMiLCJ0cmlnZ2VyRGF0YUF0dHIiLCJyZXN0YXJ0IiwidHJpZ2dlckF0dHIiLCJjbG9zZUF0dHIiLCJjbG9zZXMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibnNQdWJTdWIiLCJzdWIiXSwibWFwcGluZ3MiOiJBQUFBLGNBQ0MsV0FlQyxRQUFTQSxHQUFPQyxFQUFZQyxHQUMxQixHQUFJQyxHQUFZQyxFQUFPQyxRQUNuQkMs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LElBQ0FuQyxFQUFPMkMsSUFBSSxlQUFnQnpELEdBQzNCYyxFQUFPMkMsSUFBSSxnQkFBaUJOIiwiZmlsZSI6Il9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9fYmVoYXZpb3IvbW9kYWwvZGVza3RvcC9tb2RhbC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBQVUJTVUIgPSB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1YixcbiAgICBUSU5HTEUgPSB7XG4gICAgICBtb2RhbDogXCJ0aW5nbGUtbW9kYWxcIixcbiAgICAgIHZpc2libGU6IFwidGluZ2xlLW1vZGFsLS12aXNpYmxlXCIsXG4gICAgICBlbmFibGVkOiBcInRpbmdsZS1lbmFibGVkXCJcbiAgICB9O1xuXG4gIC8qKlxuICAgKiBbdG9nZ2xlIGRlc2NyaXB0aW9uXVxuICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgKiBAcGFyYW0gIHtbdHlwZV19IHRhcmdldE5hbWUgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcGFyYW0gIHtbdHlwZV19IG9wZW4gICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgZnVuY3Rpb24gdG9nZ2xlKHRhcmdldE5hbWUsIG9wZW4pIHtcbiAgICB2YXIgb3BlbkNsYXNzID0gVElOR0xFLnZpc2libGU7XG4gICAgdmFyIHRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1vZGFsLXRhcmdldD1cIicgKyB0YXJnZXROYW1lICsgJ1wiXScpO1xuXG4gICAgaWYgKG9wZW4pIHtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKGRvY3VtZW50LmJvZHksIFRJTkdMRS5lbmFibGVkKTtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKHRhcmdldCwgb3BlbkNsYXNzKTtcbiAgICAgIFBVQlNVQi5wdWIoJ292ZXJsYXkuZGlzcGxheScsJ3Nob3cnKTtcbiAgICAgIFBVQlNVQi5wdWIoJ21vZGFsLm9wZW5lZCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKHRhcmdldCwgb3BlbkNsYXNzKTtcbiAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhkb2N1bWVudC5ib2R5LCBUSU5HTEUuZW5hYmxlZCk7XG4gICAgUFVCU1VCLnB1Yignb3ZlcmxheS5kaXNwbGF5JywnaGlkZScpO1xuICAgIFBVQlNVQi5wdWIoJ21vZGFsLmNsb3NlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIFt0cmlnZ2VyQ2xpY2tIYW5kbGVyXVxuICAgKiBoYW5kbGUgdHJpZ2dlciBjbGlja1xuICAgKiBpdCBkb2VzIG5vdCBvcGVuIG1vZGFsIGlmIGl0IGlzIGFuIGFqYXggbW9kYWxcbiAgICogQG1ldGhvZCB0cmlnZ2VyQ2xpY2tIYW5kbGVyXG4gICAqIEBwYXJhbSAge1t0eXBlXX0gICAgICAgICAgICBldmVudCBbZGVzY3JpcHRpb25dXG4gICAqIEByZXR1cm4ge1t0eXBlXX0gICAgICAgICAgICAgICAgICBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBmdW5jdGlvbiB0cmlnZ2VyQ2xpY2tIYW5kbGVyKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgdHJpZ2dlciA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgdmFyIHRhcmdldE5hbWUgPSB0cmlnZ2VyLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbC10cmlnZ2VyJyk7XG4gICAgdmFyIGFqYXhNb2RhbCA9IHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWFqYXgtbW9kYWwnKTtcbiAgICBpZighYWpheE1vZGFsKSB7XG4gICAgICB0b2dnbGUodGFyZ2V0TmFtZSwgdHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFtjbG9zZUNsaWNrSGFuZGxlciBkZXNjcmlwdGlvbl1cbiAgICogQG1ldGhvZCBjbG9zZUNsaWNrSGFuZGxlclxuICAgKiBAcGFyYW0gIHtbdHlwZV19ICAgICAgICAgIGV2ZW50IFtkZXNjcmlwdGlvbl1cbiAgICogQHJldHVybiB7W3R5cGVdfSAgICAgICAgICAgICAgICBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBmdW5jdGlvbiBjbG9zZUNsaWNrSGFuZGxlcihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdmFyIGNsb3NlID0gZXZlbnQuY3VycmVudFRhcmdldDtcbiAgICB2YXIgdGFyZ2V0TmFtZSA9XG4gICAgICBjbG9zZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbW9kYWwtY2xvc2UnKSB8fFxuICAgICAgY2xvc2UuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsLXRhcmdldCcpO1xuICAgIHRvZ2dsZSh0YXJnZXROYW1lKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBbZmluZEFuY2VzdG9yIGRlc2NyaXB0aW9uXVxuICAgKiBAbWV0aG9kIGZpbmRBbmNlc3RvclxuICAgKiBAcGFyYW0gIHtbdHlwZV19ICAgICBlbCAgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcGFyYW0gIHtbdHlwZV19ICAgICBjbHMgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgZnVuY3Rpb24gZmluZEFuY2VzdG9yKGVsLCBjbHMpIHtcbiAgICB3aGlsZSAoKGVsID0gZWwucGFyZW50RWxlbWVudCkgJiYgIWVsLmNsYXNzTGlzdC5jb250YWlucyhjbHMpKTtcbiAgICByZXR1cm4gZWw7XG4gIH1cblxuICAvKipcbiAgICogW2hhbmRsZUNsaWNrT3V0c2lkZSBkZXNjcmlwdGlvbl1cbiAgICogQG1ldGhvZCBoYW5kbGVDbGlja091dHNpZGVcbiAgICogQHBhcmFtICB7W3R5cGVdfSAgICAgICAgICAgZXZlbnQgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgICAgICAgICBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBmdW5jdGlvbiBoYW5kbGVDbGlja091dHNpZGUoZXZlbnQpIHtcbiAgICAvLyBpZiBjbGljayBpcyBvdXRzaWRlIHRoZSBtb2RhbFxuICAgIGlmICghZmluZEFuY2VzdG9yKGV2ZW50LnRhcmdldCwgVElOR0xFLm1vZGFsKSkge1xuICAgICAgdmFyIHRhcmdldE5hbWUgPVxuICAgICAgICB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RhbC1jbG9zZScpIHx8XG4gICAgICAgIHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsLXRhcmdldCcpO1xuICAgICAgdG9nZ2xlKHRhcmdldE5hbWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBbbW9kYWxJbml0IGRlc2NyaXB0aW9uXVxuICAgKiBAbWV0aG9kIG1vZGFsSW5pdFxuICAgKiBAcGFyYW0gIHtbdHlwZV19ICB0cmlnZ2VyIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtICB7W3R5cGVdfSAgdGFyZ2V0cyBbZGVzY3JpcHRpb25dXG4gICAqIEByZXR1cm4ge1t0eXBlXX0gICAgICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgZnVuY3Rpb24gbW9kYWxJbml0KHRyaWdnZXIsIHRhcmdldHMpIHtcbiAgICAvL25vbi1ibG9ja2luZyBpbiBsb29wIGluaXRpYWxpemF0aW9uLlxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICB0YXJnZXRzLmZvckVhY2goZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgIHZhciBjbG9zZSA9IHRhcmdldC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2RhbC1jbG9zZV0nKTtcbiAgICAgICAgaWYgKGNsb3NlKSB7XG4gICAgICAgICAgY2xvc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZUNsaWNrSGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYod2luZG93LmZyZWVkb20uaGFzQ2xhc3ModGFyZ2V0LCAnY2xpY2stb3ZlcmxheS1jbG9zZScpKSB7XG4gICAgICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ2xpY2tPdXRzaWRlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB0cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdHJpZ2dlckNsaWNrSGFuZGxlcik7XG4gICAgfSwgMCk7XG4gIH1cblxuICAvKipcbiAgICogW2dyb3VwRWxlbWVudHNCeVRhcmdldE5hbWVdXG4gICAqIEBtZXRob2QgZ3JvdXBFbGVtZW50c0J5VGFyZ2V0TmFtZVxuICAgKiBAcGFyYW0gIHtbdHlwZV19ICAgICAgICAgICAgICAgICAgdHJpZ2dlcnMgICBbZGVzY3JpcHRpb25dXG4gICAqIEBwYXJhbSAge1t0eXBlXX0gICAgICAgICAgICAgICAgICB0YXJnZXROYW1lIFtkZXNjcmlwdGlvbl1cbiAgICogQHJldHVybiB7W3R5cGVdfSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgZnVuY3Rpb24gZ3JvdXBFbGVtZW50c0J5VGFyZ2V0TmFtZSh0cmlnZ2VycywgdGFyZ2V0TmFtZSkge1xuICAgIHZhciB0YXJnZXRzID0gbnVsbDtcbiAgICB2YXIgdGFyZ2V0QXR0ciA9ICdbZGF0YS1tb2RhbC10YXJnZXQnICsgKHRhcmdldE5hbWUgPyAnPVwiJyArIHRhcmdldE5hbWUgKyAnXCInIDogJ10nKTtcblxuICAgIHRhcmdldHMgPSB3aW5kb3cuZnJlZWRvbS5ub2RlTGlzdFRvQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0YXJnZXRBdHRyKSk7XG5cbiAgICB0cmlnZ2Vycy5mb3JFYWNoKGZ1bmN0aW9uKHRyaWdnZXIpIHtcblxuICAgICAgdmFyIGZpbHRlcmVkVGFyZ2V0cyA9IHRhcmdldHMuZmlsdGVyKGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICB2YXIgbmV3VGFyZ2V0TmFtZSA9ICh0YXJnZXROYW1lIHx8IHRyaWdnZXIuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsLXRyaWdnZXInKSk7XG4gICAgICAgIHJldHVybiB0YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGFsLXRhcmdldCcpID09PSBuZXdUYXJnZXROYW1lO1xuICAgICAgfSk7XG5cbiAgICAgIG1vZGFsSW5pdCh0cmlnZ2VyLCBmaWx0ZXJlZFRhcmdldHMpO1xuXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogW3NldExpc3RlbmVyc11cbiAgICogc2V0IGFsbCBldmVudCBtb2RhbCBsaXN0ZW5lcnNcbiAgICogQHJldHVybiB7bnVsbH1cbiAgICovXG4gIGZ1bmN0aW9uIHNldExpc3RlbmVycygpIHtcbiAgICB2YXIgdHJpZ2dlckRhdGFBdHRyID0gJ1tkYXRhLW1vZGFsLXRyaWdnZXJdJztcbiAgICB2YXIgdHJpZ2dlcnMgPSB3aW5kb3cuZnJlZWRvbS5ub2RlTGlzdFRvQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0cmlnZ2VyRGF0YUF0dHIpKTtcblxuICAgIGdyb3VwRWxlbWVudHNCeVRhcmdldE5hbWUodHJpZ2dlcnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFtyZXN0YXJ0XVxuICAgKiByZW1vdmUgZXZlbnQgbGlzdGVuZXJzIGFuZCByZWFzc2lnbiB0aGVuXG4gICAqIEBwYXJhbSAge1N0aW5nfSB0YXJnZXROYW1lIFttb2RhbCB0YXJnZXQgbmFtZV1cbiAgICogQHJldHVybiB7bnVsbH1cbiAgICovXG4gIGZ1bmN0aW9uIHJlc3RhcnQodGFyZ2V0TmFtZSkge1xuICAgIHZhciB0cmlnZ2VyQXR0ciA9ICdbZGF0YS1tb2RhbC10cmlnZ2VyJyArICh0YXJnZXROYW1lID8gJz1cIicgKyB0YXJnZXROYW1lICsgJ1wiJyA6ICddJyk7XG4gICAgdmFyIGNsb3NlQXR0ciA9ICdbZGF0YS1tb2RhbC1jbG9zZScgKyAodGFyZ2V0TmFtZSA/ICc9XCInICsgdGFyZ2V0TmFtZSArICdcIicgOiAnXScpO1xuXG4gICAgdmFyIHRyaWdnZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0cmlnZ2VyQXR0cik7XG4gICAgdmFyIGNsb3NlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY2xvc2VBdHRyKTtcblxuICAgIHRyaWdnZXJzID0gd2luZG93LmZyZWVkb20ubm9kZUxpc3RUb0FycmF5KHRyaWdnZXJzKTtcbiAgICBjbG9zZXMgPSB3aW5kb3cuZnJlZWRvbS5ub2RlTGlzdFRvQXJyYXkoY2xvc2VzKTtcblxuICAgIGNsb3Nlcy5mb3JFYWNoKGZ1bmN0aW9uKGNsb3NlKSB7XG4gICAgICBjbG9zZS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlQ2xpY2tIYW5kbGVyKTtcbiAgICB9KTtcblxuICAgIHRyaWdnZXJzLmZvckVhY2goZnVuY3Rpb24odHJpZ2dlcikge1xuICAgICAgdHJpZ2dlci5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRyaWdnZXJDbGlja0hhbmRsZXIpO1xuICAgIH0pO1xuXG4gICAgZ3JvdXBFbGVtZW50c0J5VGFyZ2V0TmFtZSh0cmlnZ2VycywgdGFyZ2V0TmFtZSk7XG4gIH1cblxuICAvL1RPRE86IEFkZCBmdW5jdGlvbiBlIEV2YXRlIHByYSBpbmljaWFsaXphciBlIGluamV0YXIgYm9keVxuXG4gIC8qKlxuICAgKiBbc2VsZiBpbml0IGNvbnRhaW5lZCBmdW5jdGlvbl1cbiAgICoge25zUHViU3VifSBsaW5rcyB0b2dnbGUgdG8gW21vZGFsLnRvZ2dsZV1cbiAgICoge25zUHViU3VifSBsaW5rcyByZXN0YXJ0IHRvIFttb2RhbC5yZXN0YXJ0XVxuICAgKiBAcmV0dXJuIHtudWxsfVxuICAgKi9cbiAgKGZ1bmN0aW9uKCkge1xuICAgIHNldExpc3RlbmVycygpO1xuICAgIFBVQlNVQi5zdWIoJ21vZGFsLnRvZ2dsZScsIHRvZ2dsZSk7XG4gICAgUFVCU1VCLnN1YignbW9kYWwucmVzdGFydCcsIHJlc3RhcnQpO1xuICB9KCkpO1xuXG59KCkpO1xuIl19
