"use strict";!function(){function e(e){try{new window.Swiper(e.container,{nextButton:e.nextButton,prevButton:e.prevButton,paginationClickable:!0,loop:!1,longSwipes:!1,followFinger:!1,simulateTouch:!1,allowTouchMove:!1,slidesPerView:3,slidesPerGroup:1,spaceBetween:5,breakpoints:{1306:{slidesPerView:2}}})}catch(r){console.error("builder.slider.startSlider",r)}}function r(){try{var r=document.querySelectorAll("[builder-slider]");if(r)for(var t=r.length;t--;){var n={container:r[t].querySelector(".swiper-container"),nextButton:r[t].querySelector(".swiper-button-next"),prevButton:r[t].querySelector(".swiper-button-prev")};e(n)}}catch(o){console.error("builder.slider.getAllSliders",o)}}function t(e){try{window.freedom.nsPubSub.pub("builder.slider.changed",e)}catch(r){console.error("builder.slider.notifyChangedEvent",r)}}function n(){try{for(var e=document.querySelectorAll("[builder-input-slider]"),r=e.length;r--;)e[r].addEventListener("change",t)}catch(n){console.error("builder.slider.InitInputListener",n)}}function o(e,r,t){return r+"|"+e+"|"+t}function u(){try{for(var e=document.querySelectorAll("[builder-input-slider]:checked"),r=e.length,t="",n=0,u="",i="";r--;)t=e[r].getAttribute("builder-input-sku"),n=e[r].getAttribute("builder-input-step"),u=e[r].value,i=o(t,n,u),l[i]={},l[i].value=u}catch(d){console.error("builder.slider.saveState",d)}}function i(){try{for(var e=document.querySelectorAll("[builder-input-slider]"),r=e.length,t="",n=0,u="",i="";r--;)t=e[r].getAttribute("builder-input-sku"),n=e[r].getAttribute("builder-input-step"),u=e[r].value,i=o(t,n,u),l[i]&&(e[r].checked=!0)}catch(d){console.error("builder.slider.restoreState",d)}}var l={};window.freedom.nsPubSub.sub("color-flavor-size.changeHtml.before",u),window.freedom.nsPubSub.sub("builder-wrapper.after.rendered",i),window.freedom.nsPubSub.sub("builder-combo.after.change",r),window.freedom.nsPubSub.sub("builder-wrapper.after.rendered",n),window.freedom.nsPubSub.sub("builder-wrapper.open.multi-options",r)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
