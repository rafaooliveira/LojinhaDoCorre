!function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.VMasker=t()}(this,function(){var e="9",t="A",n="S",i=[9,16,17,18,36,37,38,39,40,91,92,93],r=function(e){for(var t=0,n=i.length;t<n;t++)if(e==i[t])return!1;return!0},o=function(e){return e=e||{},e={precision:e.hasOwnProperty("precision")?e.precision:2,separator:e.separator||",",delimiter:e.delimiter||".",unit:e.unit&&e.unit.replace(/[\s]/g,"")+" "||"",suffixUnit:e.suffixUnit&&" "+e.suffixUnit.replace(/[\s]/g,"")||"",zeroCents:e.zeroCents,lastOutput:e.lastOutput},e.moneyPrecision=e.zeroCents?0:e.precision,e},s=function(i,r,o){for(;r<i.length;r++)i[r]!==e&&i[r]!==t&&i[r]!==n||(i[r]=o);return i},l=function(e){this.elements=e};l.prototype.unbindElementToMask=function(){for(var e=0,t=this.elements.length;e<t;e++)this.elements[e].lastOutput="",this.elements[e].onkeyup=!1,this.elements[e].onkeydown=!1,this.elements[e].value.length&&(this.elements[e].value=this.elements[e].value.replace(/\D/g,""))},l.prototype.bindElementToMask=function(e){for(var t=this,n=function(n){n=n||window.event;var i=n.target||n.srcElement;r(n.keyCode)&&setTimeout(function(){t.opts.lastOutput=i.lastOutput,i.value=a[e](i.value,t.opts),i.lastOutput=i.value,i.setSelectionRange&&t.opts.suffixUnit&&i.setSelectionRange(i.value.length,i.value.length-t.opts.suffixUnit.length)},0)},i=0,o=this.elements.length;i<o;i++)this.elements[i].lastOutput="",this.elements[i].onkeyup=n,this.elements[i].value.length&&(this.elements[i].value=a[e](this.elements[i].value,this.opts))},l.prototype.maskMoney=function(e){this.opts=o(e),this.bindElementToMask("toMoney")},l.prototype.maskNumber=function(){this.opts={},this.bindElementToMask("toNumber")},l.prototype.maskAlphaNum=function(){this.opts={},this.bindElementToMask("toAlphaNumeric")},l.prototype.maskPattern=function(e){this.opts={pattern:e},this.bindElementToMask("toPattern")},l.prototype.unMask=function(){this.unbindElementToMask()};var a=function(e){if(!e)throw new Error("VanillaMasker: There is no element to bind.");var t="length"in e?e.length?e:[]:[e];return new l(t)};return a.toMoney=function(e,t){if(t=o(t),t.zeroCents){t.lastOutput=t.lastOutput||"";var n="("+t.separator+"[0]{0,"+t.precision+"})",i=new RegExp(n,"g"),r=e.toString().replace(/[\D]/g,"").length||0,s=t.lastOutput.toString().replace(/[\D]/g,"").length||0;e=e.toString().replace(i,""),r<s&&(e=e.slice(0,e.length-1))}var l=e.toString().replace(/[\D]/g,""),a=new RegExp("^(0|\\"+t.delimiter+")"),u=new RegExp("(\\"+t.separator+")$"),p=l.substr(0,l.length-t.moneyPrecision),h=p.substr(0,p.length%3),c=new Array(t.precision+1).join("0");p=p.substr(p.length%3,p.length);for(var f=0,g=p.length;f<g;f++)f%3===0&&(h+=t.delimiter),h+=p[f];if(h=h.replace(a,""),h=h.length?h:"0",!t.zeroCents){var m=l.length-t.precision,v=l.substr(m,t.precision),d=v.length,y=t.precision>d?t.precision:d;c=(c+v).slice(-y)}var b=t.unit+h+t.separator+c+t.suffixUnit;return b.replace(u,"")},a.toPattern=function(i,r){var o,l="object"==typeof r?r.pattern:r,a=l.replace(/\W/g,""),u=l.split(""),p=i.toString().replace(/\W/g,""),h=p.replace(/\W/g,""),c=0,f=u.length,g="object"==typeof r?r.placeholder:void 0;for(o=0;o<f;o++){if(c>=p.length){if(a.length==h.length)return u.join("");if(void 0!==g&&a.length>h.length)return s(u,o,g).join("");break}if(u[o]===e&&p[c].match(/[0-9]/)||u[o]===t&&p[c].match(/[a-zA-Z]/)||u[o]===n&&p[c].match(/[0-9a-zA-Z]/))u[o]=p[c++];else if(u[o]===e||u[o]===t||u[o]===n)return void 0!==g?s(u,o,g).join(""):u.slice(0,o).join("")}return u.join("").substr(0,o)},a.toNumber=function(e){return e.toString().replace(/(?!^-)[^0-9]/g,"")},a.toAlphaNumeric=function(e){return e.toString().replace(/[^a-z0-9 ]+/i,"")},a});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
