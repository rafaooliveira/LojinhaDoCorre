"use strict";!function(){function e(e){function t(e,t){var o=e;if(o=o.toLowerCase(),o=o.trim(),t)return o=o.replace(/\s+/g,"+"),encodeURI(o);if(window.freedom.nsDiacritics.normalize(e),o=o.replace(/\s\s+/g," "),document.querySelector(".search-in-seller__checkbox")&&document.querySelector(".search-in-seller__checkbox").checked===!0){var n=document.querySelector(".search-in-seller").getAttribute("data-seller-id");document.cookie="search_in_seller_enabled="+n+";path=/"}return o}function n(){window.clearTimeout(y.searchTimeoutId),y.searchTimeoutId=null;var t=h?h.querySelectorAll("[data-suggestion-list] a"):[];if(t&&t.length)for(var n=0;n<t.length;n++)t[n].removeEventListener("mouseover",w);o.pub("overlay.display","hide"),window.freedom.removeClass(e,"suggestion-active"),h.innerHTML="",y.selectedSuggestionLastPosition=-1}function s(e){n(),"string"==typeof e&&(h.innerHTML=e,v(),window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded"),window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded.float.mobile"))}function r(e){var t=h.querySelector("[data-suggestion-top-results-wrapper]");"string"==typeof e&&e&&t&&(t.innerHTML=e,window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded"));var o=h.querySelector("."+L);o&&window.freedom.removeClass(o,L)}function i(e,t){t&&t.length>2&&window.freedom.restClient.request(e+"?q="+t,{complete:function(t){if(y.searchTimeoutId){if(e===C.suggestion)return void s(t);r(t)}}})}function a(e,o){return o=t(o,!0),o.toLowerCase()!==y.lastRequestedQuery.toLowerCase()&&(y.lastRequestedQuery=o,window.clearTimeout(y.searchTimeoutId),y.searchTimeoutId=window.setTimeout(function(){i(e,o)},400),!0)}function u(){var e=h.querySelector("."+T);e&&(window.freedom.removeClass(e,T),window.freedom.removeClass(e,L))}function d(e){window.freedom.addClass(e,T),e&&a(C.topResults,e.innerText)&&window.freedom.addClass(e,L)}function l(e){window.freedom.removeClass(e.currentTarget,T),p.value=y.lastTypedQuery,p.focus()}function c(e){var t,o=h?h.querySelectorAll("[data-suggestion-list] a"):[];if(o.length){switch(y.selectedSuggestionLastPosition===-1&&(y.lastTypedQuery=p.value),e.keyCode){case P.up:y.selectedSuggestionLastPosition>=0?y.selectedSuggestionLastPosition--:y.selectedSuggestionLastPosition=o.length-1;break;case P.down:y.selectedSuggestionLastPosition===o.length-1?y.selectedSuggestionLastPosition=-1:y.selectedSuggestionLastPosition++;break;default:return}if(e.preventDefault(),y.selectedSuggestionLastPosition===-1)return p.value=y.lastTypedQuery,l(e),void u();t=o[y.selectedSuggestionLastPosition],p&&t&&(p.value=t.innerText),u(),t&&d(t)}}function g(t){return t.value?window.freedom.addClass(e,"clear-active"):window.freedom.removeClass(e,"clear-active"),t.value.length<3?(n(),void window.freedom.nsPubSub.pub("SearchSuggestion.mobile.disable.Fixed")):void a(C.suggestion,t.value)}function f(e){var t=e.currentTarget;return e.keyCode===P.esc?(window.freedom.nsPubSub.pub("Searchfield.esc.pressed"),void n()):e.keyCode===P.up||e.keyCode===P.down?void c(e):void g(t)}function w(e){u(),e&&e.currentTarget&&a(C.topResults,e.currentTarget.innerText)&&window.freedom.addClass(e.target,L)}function m(e){setTimeout(function(){window.freedom.removeClass(e.target,L)},20)}function v(){for(var t=h?h.querySelectorAll("[data-suggestion-list] a"):[],n=0;n<t.length;n++)t[n].addEventListener("mouseover",w),t[n].addEventListener("mouseleave",m);o.pub("overlay.display","show"),window.freedom.addClass(e,"suggestion-active")}function b(e){p.value?(p.value.replace(/<[a-zA-Z\/][^>]*>|">|<"/g,""),p.value=t(p.value)):(window.freedom.preventDefault(e),window.location.pathname&&"/"!==window.location.pathname&&window.location.assign("/"))}var h=e.querySelector("[data-search-suggestion-wrapper]"),p=e.querySelector("[data-search-field]"),S=e.parentElement.querySelector("[data-search-field-form]");if(!h||!p||!S)throw new Error("Main structure is missing. Verify SearchField component.");var y={lastTypedQuery:"",searchTimeoutId:null,lastRequestedQuery:"",selectedSuggestionLastPosition:-1},T="selected",L="loading",P={up:38,down:40,esc:27},C={suggestion:"/refactoring/suggestion",topResults:"/refactoring/suggestion/top-results"};!function(){var t=e.getAttribute("data-suggestion"),o=!(t&&"ENABLED"!==t);S.addEventListener("submit",b),o&&(n(),window.freedom.nsPubSub.sub("overlay.clicked",n),window.freedom.nsPubSub.sub("searchField.clearSuggestion",n),window.freedom.nsPubSub.sub("float.searchField.clearSuggestion",n),window.freedom.nsPubSub.sub("searchField.valueUpdated",g),p.addEventListener("keyup",f))}()}function t(){var t=document.querySelectorAll("[data-search-field-wrapper]");if(t.length)for(var o=0;o<t.length;o++)e(t[o])}var o=window.freedom.nsPubSub||{};!function(){o.sub("nsDiacritics.loaded",t)}()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9zZWFyY2gtZmllbGQvYWxsL3NlYXJjaC1maWVsZC5taW4uanMiXSwibmFtZXMiOlsic2VhcmNoRmllbGRGYWN0b3J5IiwiY29tcG9uZW50Iiwibm9ybWFsaXplIiwidGV4dCIsImlzQWpheCIsInZhbHVlIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwicmVwbGFjZSIsImVuY29kZVVSSSIsIndpbmRvdyIsImZyZWVkb20iLCJuc0RpYWNyaXRpY3MiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjaGVja2VkIiwic2VsbGVySWQiLCJnZXRBdHRyaWJ1dGUiLCJjb29raWUiLCJjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMiLCJjbGVhclRpbWVvdXQiLCJjYWNoZSIsInNlYXJjaFRpbWVvdXRJZCIsInN1Z2dlc3Rpb25zIiwiZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsImkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib25Nb3VzZU92ZXJTdWdnZXN0aW9uIiwibnNQdWJTdWIiLCJwdWIiLCJyZW1vdmVDbGFzcyIsImlubmVySFRNTCIsInNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiIsInN1Z2dlc3Rpb25SZXF1ZXN0Q29tcGxldGVkIiwicmVzcG9uc2UiLCJpbml0U3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cyIsInRvcFJlc3VsdHNSZXF1ZXN0Q29tcGxldGVkIiwiZWwiLCJzZWxlY3RlZCIsInN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lIiwibWFrZVJlcXVlc3QiLCJ1cmwiLCJxdWVyeSIsInJlc3RDbGllbnQiLCJyZXF1ZXN0IiwiY29tcGxldGUiLCJBUElfUEFUSFMiLCJzdWdnZXN0aW9uIiwicHJlcGFyZVJlcXVlc3QiLCJsYXN0UmVxdWVzdGVkUXVlcnkiLCJzZXRUaW1lb3V0IiwiY2xlYXJDdXJyZW50U3VnZ2VzdGlvbiIsImVsZW1lbnQiLCJzdWdnZXN0aW9uU2VsZWN0ZWRDbGFzc05hbWUiLCJzZWxlY3RTdWdnZXN0aW9uSXRlbSIsImFkZENsYXNzIiwidG9wUmVzdWx0cyIsImlubmVyVGV4dCIsInNldEZvY3VzT25TZWFyY2hGaWVsZCIsImV2ZW50IiwiY3VycmVudFRhcmdldCIsImRvbUNvbXBvbmVudEVsZW1lbnQiLCJsYXN0VHlwZWRRdWVyeSIsImZvY3VzIiwib25UeXBlQXJyb3dzVXBBbmREb3duIiwic3VnZ2VzdGlvblRvU2VsZWN0Iiwia2V5Q29kZSIsImtleUNvZGVzIiwidXAiLCJkb3duIiwicHJldmVudERlZmF1bHQiLCJzZWFyY2hGaWVsZFZhbHVlVXBkYXRlZCIsInNlYXJjaEZpZWxkIiwib25UeXBlT25TZWFyY2hGaWVsZEhhbmRsZXIiLCJldmVudFRhcmdldCIsImVzYyIsInRhcmdldCIsIm9uTW91c2VMZWF2ZVN1Z2dlc3Rpb24iLCJhZGRFdmVudExpc3RlbmVyIiwiZm9ybVN1Ym1pdEhhbmRsZXIiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiYXNzaWduIiwiZG9tRm9ybUVsZW1lbnQiLCJwYXJlbnRFbGVtZW50IiwiRXJyb3IiLCJkYXRhU3VnZ2VzdGlvbiIsInNob3VsZFN1Z2dlc3QiLCJzdWIiLCJjcmVhdGVTdWdnZXN0aW9uIiwiY29tcG9uZW50cyJdLCJtYXBwaW5ncyI6IkFBQUEsY0FDQyxXQUdDLFFBQVNBLEdBQW1CQyxHQTRCMUIsUUFBU0MsR0FBVUMsRUFBTUMsR0FDdkIsR0FBSUMsR0FBUUYsQ0FJWixJQUhBRSxFQUFRQSxFQUFNQyxjQUNkRCxFQUFRQSxFQUFNRSxPQUVWSCxFQUVGLE1BREFDLEdBQVFBLEVBQU1HLFFBQVEsT0FBUSxLQUN2QkMsVUFBVUosRUFPbkIsSUFIQUssT0FBT0MsUUFBUUMsYUFBYVYsVUFBVUMsR0FDdENFLEVBQVFBLEVBQU1HLFFBQVEsU0FBVSxLQUU1QkssU0FBU0MsY0FBYyxnQ0FDckJELFNBQVNDLGNBQWMsK0JBQStCQyxXQUFZLEVBQU0sQ0FDMUUsR0FBSUMsR0FBV0gsU0FBU0MsY0FBYyxxQkFBcUJHLGFBQWEsaUJBQ3hFSixVQUFTSyxPQUFTLDRCQUE4QkYsRUFBVyxVQUkvRCxNQUFPWCxHQUdULFFBQVNjLEtBQ1BULE9BQU9VLGFBQWFDLEVBQU1DLGlCQUcxQkQsRUFBTUMsZ0JBQWtCLElBRXhCLElBQUlDLEdBQWNDLEVBQThCQSxFQUE0QkMsaUJBQWlCLDhCQUM3RixJQUFJRixHQUFlQSxFQUFZRyxPQUM3QixJQUFLLEdBQUlDLEdBQUksRUFBR0EsRUFBSUosRUFBWUcsT0FBUUMsSUFDdENKLEVBQVlJLEdBQUdDLG9CQUFvQixZQUFhQyxFQUlwREMsR0FBU0MsSUFBSSxrQkFBbUIsUUFDaENyQixPQUFPQyxRQUFRcUIsWUFBWS9CLEVBQVcscUJBRXRDdUIsRUFBNEJTLFVBQVksR0FDeENaLEVBQU1hLGtDQUdSLFFBQVNDLEdBQTJCQyxHQUNsQ2pCLElBRXdCLGdCQUFiaUIsS0FDVFosRUFBNEJTLFVBQVlHLEVBQ3hDQyxJQUNBM0IsT0FBT0MsUUFBUW1CLFNBQVNDLElBQUksaUNBQzVCckIsT0FBT0MsUUFBUW1CLFNBQVNDLElBQUksK0NBSWhDLFFBQVNPLEdBQTJCRixHQUNsQyxHQUFJRyxHQUFLZixFQUE0QlYsY0FBYyx3Q0FDM0IsaUJBQWJzQixJQUF5QkEsR0FBWUcsSUFDOUNBLEVBQUdOLFVBQVlHLEVBQ2YxQixPQUFPQyxRQUFRbUIsU0FBU0MsSUFBSSxpQ0FFOUIsSUFBSVMsR0FBV2hCLEVBQTRCVixjQUFjLElBQU0yQixFQUMzREQsSUFDRjlCLE9BQU9DLFFBQVFxQixZQUFZUSxFQUFVQyxHQUl6QyxRQUFTQyxHQUFZQyxFQUFLQyxHQUNwQkEsR0FBU0EsRUFBTWxCLE9BQVMsR0FDMUJoQixPQUFPQyxRQUFRa0MsV0FBV0MsUUFBUUgsRUFBTSxNQUFRQyxHQUM5Q0csU0FBVSxTQUFTWCxHQUNqQixHQUFJZixFQUFNQyxnQkFBaUIsQ0FDekIsR0FBSXFCLElBQVFLLEVBQVVDLFdBRXBCLFdBREFkLEdBQTJCQyxFQUc3QkUsR0FBMkJGLE9BYXJDLFFBQVNjLEdBQWVQLEVBQUtDLEdBRTNCLE1BREFBLEdBQVExQyxFQUFVMEMsR0FBTyxHQUNyQkEsRUFBTXRDLGdCQUFrQmUsRUFBTThCLG1CQUFtQjdDLGdCQUlyRGUsRUFBTThCLG1CQUFxQlAsRUFFM0JsQyxPQUFPVSxhQUFhQyxFQUFNQyxpQkFFMUJELEVBQU1DLGdCQUFrQlosT0FBTzBDLFdBQVcsV0FDeENWLEVBQVlDLEVBQUtDLElBQ2hCLE1BQ0ksR0FHVCxRQUFTUyxLQUNQLEdBQUlDLEdBQVU5QixFQUE0QlYsY0FBYyxJQUFNeUMsRUFDMURELEtBQ0Y1QyxPQUFPQyxRQUFRcUIsWUFBWXNCLEVBQVNDLEdBQ3BDN0MsT0FBT0MsUUFBUXFCLFlBQVlzQixFQUFTYixJQUl4QyxRQUFTZSxHQUFxQkYsR0FDNUI1QyxPQUFPQyxRQUFROEMsU0FBU0gsRUFBU0MsR0FDN0JELEdBQVdKLEVBQWVGLEVBQVVVLFdBQVlKLEVBQVFLLFlBQzFEakQsT0FBT0MsUUFBUThDLFNBQVNILEVBQVNiLEdBSXJDLFFBQVNtQixHQUFzQkMsR0FDN0JuRCxPQUFPQyxRQUFRcUIsWUFBWTZCLEVBQU1DLGNBQWVQLEdBQ2hEUSxFQUFvQjFELE1BQVFnQixFQUFNMkMsZUFDbENELEVBQW9CRSxRQUd0QixRQUFTQyxHQUFzQkwsR0FDN0IsR0FDSU0sR0FEQTVDLEVBQWNDLEVBQThCQSxFQUE0QkMsaUJBQWlCLDhCQUc3RixJQUFLRixFQUFZRyxPQUFqQixDQVFBLE9BSklMLEVBQU1hLHNDQUNSYixFQUFNMkMsZUFBaUJELEVBQW9CMUQsT0FHckN3RCxFQUFNTyxTQUNaLElBQUtDLEdBQVNDLEdBRVJqRCxFQUFNYSxnQ0FBa0MsRUFDMUNiLEVBQU1hLGlDQUVOYixFQUFNYSwrQkFBaUNYLEVBQVlHLE9BQVMsQ0FFOUQsTUFDRixLQUFLMkMsR0FBU0UsS0FDUmxELEVBQU1hLGlDQUFtQ1gsRUFBWUcsT0FBUyxFQUNoRUwsRUFBTWEsa0NBRU5iLEVBQU1hLGdDQUVSLE1BQ0YsU0FDRSxPQUtKLEdBRkEyQixFQUFNVyxpQkFFRm5ELEVBQU1hLG9DQUlSLE1BSEE2QixHQUFvQjFELE1BQVFnQixFQUFNMkMsZUFDbENKLEVBQXNCQyxPQUN0QlIsSUFJRmMsR0FBcUI1QyxFQUFZRixFQUFNYSxnQ0FFbkM2QixHQUF1QkksSUFDekJKLEVBQW9CMUQsTUFBUThELEVBQW1CUixXQUdqRE4sSUFFSWMsR0FDRlgsRUFBcUJXLElBSXpCLFFBQVNNLEdBQXdCQyxHQU8vQixNQU5JQSxHQUFZckUsTUFDZEssT0FBT0MsUUFBUThDLFNBQVN4RCxFQUFXLGdCQUVuQ1MsT0FBT0MsUUFBUXFCLFlBQVkvQixFQUFXLGdCQUdwQ3lFLEVBQVlyRSxNQUFNcUIsT0FBUyxHQUM3QlAsUUFDQVQsUUFBT0MsUUFBUW1CLFNBQVNDLElBQUksOENBSTlCbUIsR0FBZUYsRUFBVUMsV0FBWXlCLEVBQVlyRSxPQUduRCxRQUFTc0UsR0FBMkJkLEdBQ2xDLEdBQUllLEdBQWNmLEVBQU1DLGFBRXhCLE9BQUlELEdBQU1PLFVBQVlDLEVBQVNRLEtBQzdCbkUsT0FBT0MsUUFBUW1CLFNBQVNDLElBQUksK0JBQzVCWixNQUlFMEMsRUFBTU8sVUFBWUMsRUFBU0MsSUFBTVQsRUFBTU8sVUFBWUMsRUFBU0UsU0FDOURMLEdBQXNCTCxPQUl4QlksR0FBd0JHLEdBRzFCLFFBQVMvQyxHQUFzQmdDLEdBQzdCUixJQUNJUSxHQUFTQSxFQUFNQyxlQUFpQlosRUFBZUYsRUFBVVUsV0FBWUcsRUFBTUMsY0FBY0gsWUFDM0ZqRCxPQUFPQyxRQUFROEMsU0FBU0ksRUFBTWlCLE9BQVFyQyxHQUkxQyxRQUFTc0MsR0FBdUJsQixHQUM5QlQsV0FBVyxXQUNUMUMsT0FBT0MsUUFBUXFCLFlBQVk2QixFQUFNaUIsT0FBUXJDLElBQ3hDLElBR0wsUUFBU0osS0FHUCxJQUFLLEdBRkRkLEdBQWNDLEVBQThCQSxFQUE0QkMsaUJBQWlCLCtCQUVwRkUsRUFBSSxFQUFHQSxFQUFJSixFQUFZRyxPQUFRQyxJQUN0Q0osRUFBWUksR0FBR3FELGlCQUFpQixZQUFhbkQsR0FDN0NOLEVBQVlJLEdBQUdxRCxpQkFBaUIsYUFBY0QsRUFHaERqRCxHQUFTQyxJQUFJLGtCQUFtQixRQUNoQ3JCLE9BQU9DLFFBQVE4QyxTQUFTeEQsRUFBVyxxQkFHckMsUUFBU2dGLEdBQWtCcEIsR0FFckJFLEVBQW9CMUQsT0FDdEIwRCxFQUFvQjFELE1BQU1HLFFBQVEsMkJBQTRCLElBQzlEdUQsRUFBb0IxRCxNQUFRSCxFQUFVNkQsRUFBb0IxRCxTQUUxREssT0FBT0MsUUFBUTZELGVBQWVYLEdBQzFCbkQsT0FBT3dFLFNBQVNDLFVBQXlDLE1BQTdCekUsT0FBT3dFLFNBQVNDLFVBQzlDekUsT0FBT3dFLFNBQVNFLE9BQU8sTUFqUjdCLEdBQUk1RCxHQUE4QnZCLEVBQVVhLGNBQWMsb0NBQ3REaUQsRUFBc0I5RCxFQUFVYSxjQUFjLHVCQUM5Q3VFLEVBQWlCcEYsRUFBVXFGLGNBQWN4RSxjQUFjLDJCQUUzRCxLQUFLVSxJQUFnQ3VDLElBQXdCc0IsRUFDM0QsS0FBTSxJQUFJRSxPQUFNLDJEQUdsQixJQUFJbEUsSUFDRjJDLGVBQWdCLEdBQ2hCMUMsZ0JBQWlCLEtBQ2pCNkIsbUJBQW9CLEdBQ3BCakIsbUNBR0VxQixFQUE4QixXQUM5QmQsRUFBNkIsVUFDN0I0QixHQUNGQyxHQUFJLEdBQ0pDLEtBQU0sR0FDTk0sSUFBSyxJQUVIN0IsR0FDRkMsV0FBWSwwQkFDWlMsV0FBWSx3Q0E4UGIsV0FDQyxHQUFJOEIsR0FBaUJ2RixFQUFVZ0IsYUFBYSxtQkFDeEN3RSxJQUFrQkQsR0FBcUMsWUFBbkJBLEVBRXhDSCxHQUFlTCxpQkFBaUIsU0FBVUMsR0FFdENRLElBQ0Z0RSxJQUNBVCxPQUFPQyxRQUFRbUIsU0FBUzRELElBQUksa0JBQW1CdkUsR0FDL0NULE9BQU9DLFFBQVFtQixTQUFTNEQsSUFBSSw4QkFBK0J2RSxHQUMzRFQsT0FBT0MsUUFBUW1CLFNBQVM0RCxJQUFJLG9DQUFxQ3ZFLEdBQ2pFVCxPQUFPQyxRQUFRbUIsU0FBUzRELElBQUksMkJBQTRCakIsR0FDeERWLEVBQW9CaUIsaUJBQWlCLFFBQVNMLE9BTXBELFFBQVNnQixLQUNQLEdBQUlDLEdBQWEvRSxTQUFTWSxpQkFBaUIsOEJBRTNDLElBQUttRSxFQUFXbEUsT0FJaEIsSUFBSyxHQUFJQyxHQUFJLEVBQUdBLEVBQUlpRSxFQUFXbEUsT0FBUUMsSUFDckMzQixFQUFtQjRGLEVBQVdqRSxJQW5UbEMsR0FBSUcsR0FBV3BCLE9BQU9DLFFBQVFtQixjQXVUN0IsV0FDQ0EsRUFBUzRELElBQUksc0JBQXVCQyIsImZpbGUiOiJfcmVmYWN0b3JpbmcvX2NvbXBvbmVudHMvc2VhcmNoLWZpZWxkL2FsbC9zZWFyY2gtZmllbGQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgbnNQdWJTdWIgPSB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1YiB8fCB7fTtcblxuICBmdW5jdGlvbiBzZWFyY2hGaWVsZEZhY3RvcnkoY29tcG9uZW50KSB7XG4gICAgdmFyIGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlciA9IGNvbXBvbmVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zZWFyY2gtc3VnZ2VzdGlvbi13cmFwcGVyXScpO1xuICAgIHZhciBkb21Db21wb25lbnRFbGVtZW50ID0gY29tcG9uZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXNlYXJjaC1maWVsZF0nKTtcbiAgICB2YXIgZG9tRm9ybUVsZW1lbnQgPSBjb21wb25lbnQucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zZWFyY2gtZmllbGQtZm9ybV0nKTtcblxuICAgIGlmICghZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyIHx8ICFkb21Db21wb25lbnRFbGVtZW50IHx8ICFkb21Gb3JtRWxlbWVudCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdNYWluIHN0cnVjdHVyZSBpcyBtaXNzaW5nLiBWZXJpZnkgU2VhcmNoRmllbGQgY29tcG9uZW50LicpO1xuICAgIH1cblxuICAgIHZhciBjYWNoZSA9IHtcbiAgICAgIGxhc3RUeXBlZFF1ZXJ5OiAnJyxcbiAgICAgIHNlYXJjaFRpbWVvdXRJZDogbnVsbCxcbiAgICAgIGxhc3RSZXF1ZXN0ZWRRdWVyeTogJycsXG4gICAgICBzZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb246IC0xXG4gICAgfTtcblxuICAgIHZhciBzdWdnZXN0aW9uU2VsZWN0ZWRDbGFzc05hbWUgPSAnc2VsZWN0ZWQnO1xuICAgIHZhciBzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSA9ICdsb2FkaW5nJztcbiAgICB2YXIga2V5Q29kZXMgPSB7XG4gICAgICB1cDogMzgsXG4gICAgICBkb3duOiA0MCxcbiAgICAgIGVzYzogMjdcbiAgICB9O1xuICAgIHZhciBBUElfUEFUSFMgPSB7XG4gICAgICBzdWdnZXN0aW9uOiAnL3JlZmFjdG9yaW5nL3N1Z2dlc3Rpb24nLFxuICAgICAgdG9wUmVzdWx0czogJy9yZWZhY3RvcmluZy9zdWdnZXN0aW9uL3RvcC1yZXN1bHRzJ1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBub3JtYWxpemUodGV4dCwgaXNBamF4KSB7XG4gICAgICB2YXIgdmFsdWUgPSB0ZXh0O1xuICAgICAgdmFsdWUgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS50cmltKCk7XG5cbiAgICAgIGlmIChpc0FqYXgpIHtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXHMrL2csICcrJyk7XG4gICAgICAgIHJldHVybiBlbmNvZGVVUkkodmFsdWUpO1xuICAgICAgfVxuXG4gICAgICAvLyBpcyBmb3JtIHN1Ym1pdFxuICAgICAgd2luZG93LmZyZWVkb20ubnNEaWFjcml0aWNzLm5vcm1hbGl6ZSh0ZXh0KTtcbiAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXFxzXFxzKy9nLCAnICcpO1xuXG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC1pbi1zZWxsZXJfX2NoZWNrYm94JykpIHtcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtaW4tc2VsbGVyX19jaGVja2JveCcpLmNoZWNrZWQgPT09IHRydWUpIHtcbiAgICAgICAgICB2YXIgc2VsbGVySWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWluLXNlbGxlcicpLmdldEF0dHJpYnV0ZSgnZGF0YS1zZWxsZXItaWQnKTtcbiAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBcInNlYXJjaF9pbl9zZWxsZXJfZW5hYmxlZD1cIiArIHNlbGxlcklkICsgXCI7cGF0aD0vXCI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFyU3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cygpIHtcbiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoY2FjaGUuc2VhcmNoVGltZW91dElkKTtcblxuICAgICAgLy8gdXNlZnVsIHRvIGF2b2lkIGZvcm1lciBjYW5jZWxsZWQgcmVxdWVzdHMgdG8gb3ZlcndyaXRlIGN1cnJlbnQgc3VnZ2VzdGlvbiBzdGF0ZVxuICAgICAgY2FjaGUuc2VhcmNoVGltZW91dElkID0gbnVsbDtcblxuICAgICAgdmFyIHN1Z2dlc3Rpb25zID0gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyID8gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXN1Z2dlc3Rpb24tbGlzdF0gYScpIDogW107XG4gICAgICBpZiAoc3VnZ2VzdGlvbnMgJiYgc3VnZ2VzdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3VnZ2VzdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBzdWdnZXN0aW9uc1tpXS5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBvbk1vdXNlT3ZlclN1Z2dlc3Rpb24pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG5zUHViU3ViLnB1Yignb3ZlcmxheS5kaXNwbGF5JywgJ2hpZGUnKTtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKGNvbXBvbmVudCwgJ3N1Z2dlc3Rpb24tYWN0aXZlJyk7XG5cbiAgICAgIGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5pbm5lckhUTUwgPSAnJztcbiAgICAgIGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiA9IC0xO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN1Z2dlc3Rpb25SZXF1ZXN0Q29tcGxldGVkKHJlc3BvbnNlKSB7XG4gICAgICBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKTtcblxuICAgICAgaWYgKHR5cGVvZiByZXNwb25zZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyLmlubmVySFRNTCA9IHJlc3BvbnNlO1xuICAgICAgICBpbml0U3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cygpO1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5wdWIoJ1NlYXJjaGZpZWxkLnN1Z2dlc3Rpb24ubG9hZGVkJyk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnB1YignU2VhcmNoZmllbGQuc3VnZ2VzdGlvbi5sb2FkZWQuZmxvYXQubW9iaWxlJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9wUmVzdWx0c1JlcXVlc3RDb21wbGV0ZWQocmVzcG9uc2UpIHtcbiAgICAgIHZhciBlbCA9IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5xdWVyeVNlbGVjdG9yKCdbZGF0YS1zdWdnZXN0aW9uLXRvcC1yZXN1bHRzLXdyYXBwZXJdJyk7XG4gICAgICBpZiAodHlwZW9mIHJlc3BvbnNlID09PSAnc3RyaW5nJyAmJiByZXNwb25zZSAmJiBlbCkge1xuICAgICAgICBlbC5pbm5lckhUTUwgPSByZXNwb25zZTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIucHViKCdTZWFyY2hmaWVsZC5zdWdnZXN0aW9uLmxvYWRlZCcpO1xuICAgICAgfVxuICAgICAgdmFyIHNlbGVjdGVkID0gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy4nICsgc3VnZ2VzdGlvbkxvYWRpbmdDbGFzc05hbWUpO1xuICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKHNlbGVjdGVkLCBzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFrZVJlcXVlc3QodXJsLCBxdWVyeSkge1xuICAgICAgaWYgKHF1ZXJ5ICYmIHF1ZXJ5Lmxlbmd0aCA+IDIpIHsvLyBvbmx5IDMgY2hhcmFjdGVycyBvciBtb3JlIVxuICAgICAgICB3aW5kb3cuZnJlZWRvbS5yZXN0Q2xpZW50LnJlcXVlc3QodXJsICsgJz9xPScgKyBxdWVyeSwge1xuICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgaWYgKGNhY2hlLnNlYXJjaFRpbWVvdXRJZCkge1xuICAgICAgICAgICAgICBpZiAodXJsID09PSBBUElfUEFUSFMuc3VnZ2VzdGlvbikge1xuICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb25SZXF1ZXN0Q29tcGxldGVkKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdG9wUmVzdWx0c1JlcXVlc3RDb21wbGV0ZWQocmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0cnVlIGlmIHJlcXVlc3QgaXMgYmVpbmcgcGVyZm9ybWVkLlxuICAgICAqIElmIGl0IGlzIHRoZSBzYW1lIG9mIHRoZSBsYXN0IHF1ZXJ5IHJlcXVlc3RlZCwgd2lsbCByZXR1cm4gZmFsc2VcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHByZXBhcmVSZXF1ZXN0KHVybCwgcXVlcnkpIHtcbiAgICAgIHF1ZXJ5ID0gbm9ybWFsaXplKHF1ZXJ5LCB0cnVlKTtcbiAgICAgIGlmIChxdWVyeS50b0xvd2VyQ2FzZSgpID09PSBjYWNoZS5sYXN0UmVxdWVzdGVkUXVlcnkudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGNhY2hlLmxhc3RSZXF1ZXN0ZWRRdWVyeSA9IHF1ZXJ5O1xuXG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNhY2hlLnNlYXJjaFRpbWVvdXRJZCk7XG5cbiAgICAgIGNhY2hlLnNlYXJjaFRpbWVvdXRJZCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBtYWtlUmVxdWVzdCh1cmwsIHF1ZXJ5KTtcbiAgICAgIH0sIDQwMCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhckN1cnJlbnRTdWdnZXN0aW9uKCkge1xuICAgICAgdmFyIGVsZW1lbnQgPSBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIucXVlcnlTZWxlY3RvcignLicgKyBzdWdnZXN0aW9uU2VsZWN0ZWRDbGFzc05hbWUpO1xuICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20ucmVtb3ZlQ2xhc3MoZWxlbWVudCwgc3VnZ2VzdGlvblNlbGVjdGVkQ2xhc3NOYW1lKTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ucmVtb3ZlQ2xhc3MoZWxlbWVudCwgc3VnZ2VzdGlvbkxvYWRpbmdDbGFzc05hbWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNlbGVjdFN1Z2dlc3Rpb25JdGVtKGVsZW1lbnQpIHtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKGVsZW1lbnQsIHN1Z2dlc3Rpb25TZWxlY3RlZENsYXNzTmFtZSk7XG4gICAgICBpZiAoZWxlbWVudCAmJiBwcmVwYXJlUmVxdWVzdChBUElfUEFUSFMudG9wUmVzdWx0cywgZWxlbWVudC5pbm5lclRleHQpKSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKGVsZW1lbnQsIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRGb2N1c09uU2VhcmNoRmllbGQoZXZlbnQpIHtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKGV2ZW50LmN1cnJlbnRUYXJnZXQsIHN1Z2dlc3Rpb25TZWxlY3RlZENsYXNzTmFtZSk7XG4gICAgICBkb21Db21wb25lbnRFbGVtZW50LnZhbHVlID0gY2FjaGUubGFzdFR5cGVkUXVlcnk7XG4gICAgICBkb21Db21wb25lbnRFbGVtZW50LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25UeXBlQXJyb3dzVXBBbmREb3duKGV2ZW50KSB7XG4gICAgICB2YXIgc3VnZ2VzdGlvbnMgPSBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIgPyBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3VnZ2VzdGlvbi1saXN0XSBhJykgOiBbXTtcbiAgICAgIHZhciBzdWdnZXN0aW9uVG9TZWxlY3Q7XG5cbiAgICAgIGlmICghc3VnZ2VzdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiA9PT0gLTEpIHtcbiAgICAgICAgY2FjaGUubGFzdFR5cGVkUXVlcnkgPSBkb21Db21wb25lbnRFbGVtZW50LnZhbHVlO1xuICAgICAgfVxuXG4gICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgY2FzZSBrZXlDb2Rlcy51cDpcblxuICAgICAgICAgIGlmIChjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPj0gMCkge1xuICAgICAgICAgICAgY2FjaGUuc2VsZWN0ZWRTdWdnZXN0aW9uTGFzdFBvc2l0aW9uLS07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiA9IHN1Z2dlc3Rpb25zLmxlbmd0aCAtIDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIGtleUNvZGVzLmRvd246XG4gICAgICAgICAgaWYgKGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiA9PT0gc3VnZ2VzdGlvbnMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgY2FjaGUuc2VsZWN0ZWRTdWdnZXN0aW9uTGFzdFBvc2l0aW9uID0gLTE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbisrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGlmIChjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPT09IC0xKSB7XG4gICAgICAgIGRvbUNvbXBvbmVudEVsZW1lbnQudmFsdWUgPSBjYWNoZS5sYXN0VHlwZWRRdWVyeTtcbiAgICAgICAgc2V0Rm9jdXNPblNlYXJjaEZpZWxkKGV2ZW50KTtcbiAgICAgICAgY2xlYXJDdXJyZW50U3VnZ2VzdGlvbigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHN1Z2dlc3Rpb25Ub1NlbGVjdCA9IHN1Z2dlc3Rpb25zW2NhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbl07XG5cbiAgICAgIGlmIChkb21Db21wb25lbnRFbGVtZW50ICYmIHN1Z2dlc3Rpb25Ub1NlbGVjdCkge1xuICAgICAgICBkb21Db21wb25lbnRFbGVtZW50LnZhbHVlID0gc3VnZ2VzdGlvblRvU2VsZWN0LmlubmVyVGV4dDtcbiAgICAgIH1cblxuICAgICAgY2xlYXJDdXJyZW50U3VnZ2VzdGlvbigpO1xuXG4gICAgICBpZiAoc3VnZ2VzdGlvblRvU2VsZWN0KSB7XG4gICAgICAgIHNlbGVjdFN1Z2dlc3Rpb25JdGVtKHN1Z2dlc3Rpb25Ub1NlbGVjdCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2VhcmNoRmllbGRWYWx1ZVVwZGF0ZWQoc2VhcmNoRmllbGQpIHtcbiAgICAgIGlmIChzZWFyY2hGaWVsZC52YWx1ZSkge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5hZGRDbGFzcyhjb21wb25lbnQsICdjbGVhci1hY3RpdmUnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKGNvbXBvbmVudCwgJ2NsZWFyLWFjdGl2ZScpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2VhcmNoRmllbGQudmFsdWUubGVuZ3RoIDwgMykge1xuICAgICAgICBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIucHViKCdTZWFyY2hTdWdnZXN0aW9uLm1vYmlsZS5kaXNhYmxlLkZpeGVkJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcHJlcGFyZVJlcXVlc3QoQVBJX1BBVEhTLnN1Z2dlc3Rpb24sIHNlYXJjaEZpZWxkLnZhbHVlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvblR5cGVPblNlYXJjaEZpZWxkSGFuZGxlcihldmVudCkge1xuICAgICAgdmFyIGV2ZW50VGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldDtcblxuICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IGtleUNvZGVzLmVzYykge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5wdWIoJ1NlYXJjaGZpZWxkLmVzYy5wcmVzc2VkJyk7XG4gICAgICAgIGNsZWFyU3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBrZXlDb2Rlcy51cCB8fCBldmVudC5rZXlDb2RlID09PSBrZXlDb2Rlcy5kb3duKSB7XG4gICAgICAgIG9uVHlwZUFycm93c1VwQW5kRG93bihldmVudCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc2VhcmNoRmllbGRWYWx1ZVVwZGF0ZWQoZXZlbnRUYXJnZXQpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdmVyU3VnZ2VzdGlvbihldmVudCkge1xuICAgICAgY2xlYXJDdXJyZW50U3VnZ2VzdGlvbigpO1xuICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LmN1cnJlbnRUYXJnZXQgJiYgcHJlcGFyZVJlcXVlc3QoQVBJX1BBVEhTLnRvcFJlc3VsdHMsIGV2ZW50LmN1cnJlbnRUYXJnZXQuaW5uZXJUZXh0KSkge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5hZGRDbGFzcyhldmVudC50YXJnZXQsIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbk1vdXNlTGVhdmVTdWdnZXN0aW9uKGV2ZW50KSB7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhldmVudC50YXJnZXQsIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lKTtcbiAgICAgIH0sIDIwKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbml0U3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cygpIHtcbiAgICAgIHZhciBzdWdnZXN0aW9ucyA9IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlciA/IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1zdWdnZXN0aW9uLWxpc3RdIGEnKSA6IFtdO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN1Z2dlc3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHN1Z2dlc3Rpb25zW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIG9uTW91c2VPdmVyU3VnZ2VzdGlvbik7XG4gICAgICAgIHN1Z2dlc3Rpb25zW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBvbk1vdXNlTGVhdmVTdWdnZXN0aW9uKTtcbiAgICAgIH1cblxuICAgICAgbnNQdWJTdWIucHViKCdvdmVybGF5LmRpc3BsYXknLCAnc2hvdycpO1xuICAgICAgd2luZG93LmZyZWVkb20uYWRkQ2xhc3MoY29tcG9uZW50LCAnc3VnZ2VzdGlvbi1hY3RpdmUnKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmb3JtU3VibWl0SGFuZGxlcihldmVudCkge1xuXG4gICAgICBpZiAoZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZSkge1xuICAgICAgICBkb21Db21wb25lbnRFbGVtZW50LnZhbHVlLnJlcGxhY2UoLzxbYS16QS1aXFwvXVtePl0qPnxcIj58PFwiL2csICcnKTtcbiAgICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZSA9IG5vcm1hbGl6ZShkb21Db21wb25lbnRFbGVtZW50LnZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLnByZXZlbnREZWZhdWx0KGV2ZW50KTtcbiAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSAmJiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgIT09ICcvJykge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oJy8nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIChmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIGRhdGFTdWdnZXN0aW9uID0gY29tcG9uZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1zdWdnZXN0aW9uJyk7XG4gICAgICB2YXIgc2hvdWxkU3VnZ2VzdCA9ICEoZGF0YVN1Z2dlc3Rpb24gJiYgZGF0YVN1Z2dlc3Rpb24gIT09ICdFTkFCTEVEJyk7XG5cbiAgICAgIGRvbUZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGZvcm1TdWJtaXRIYW5kbGVyKTtcblxuICAgICAgaWYgKHNob3VsZFN1Z2dlc3QpIHtcbiAgICAgICAgY2xlYXJTdWdnZXN0aW9uV3JhcHBlckVsZW1lbnRzKCk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnN1Yignb3ZlcmxheS5jbGlja2VkJywgY2xlYXJTdWdnZXN0aW9uV3JhcHBlckVsZW1lbnRzKTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIuc3ViKCdzZWFyY2hGaWVsZC5jbGVhclN1Z2dlc3Rpb24nLCBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMpO1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5zdWIoJ2Zsb2F0LnNlYXJjaEZpZWxkLmNsZWFyU3VnZ2VzdGlvbicsIGNsZWFyU3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cyk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnN1Yignc2VhcmNoRmllbGQudmFsdWVVcGRhdGVkJywgc2VhcmNoRmllbGRWYWx1ZVVwZGF0ZWQpO1xuICAgICAgICBkb21Db21wb25lbnRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgb25UeXBlT25TZWFyY2hGaWVsZEhhbmRsZXIpO1xuICAgICAgfVxuXG4gICAgfSgpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVN1Z2dlc3Rpb24oKSB7XG4gICAgdmFyIGNvbXBvbmVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1zZWFyY2gtZmllbGQtd3JhcHBlcl0nKTtcblxuICAgIGlmICghY29tcG9uZW50cy5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbXBvbmVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHNlYXJjaEZpZWxkRmFjdG9yeShjb21wb25lbnRzW2ldKTtcbiAgICB9XG4gIH1cblxuICAoZnVuY3Rpb24oKSB7XG4gICAgbnNQdWJTdWIuc3ViKCduc0RpYWNyaXRpY3MubG9hZGVkJywgY3JlYXRlU3VnZ2VzdGlvbik7XG4gIH0oKSk7XG5cbn0oKSk7XG4iXX0=
