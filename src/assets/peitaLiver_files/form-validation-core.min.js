"use strict";window.freedom.nsValidate=function(e){function r(e,r){if(!(e&&e.length>0)||"radio"!==e[0].type&&"checkbox"!==e[0].type)return e&&e[r]?e[r]:e;for(var t=0,a=e.length;t<a;t++)if(e[t].checked)return e[t][r]}function t(r){freedom&&window.freedom.i18n&&window.freedom.i18n.messages?r(window.freedom.i18n.messages):e.warn("Freedom i18n validation messages not loaded")}function a(e){var r,t=Object.prototype.hasOwnProperty;for(r in h)t.call(h,r)&&e.setMessage(r,h[r])}function o(e){return w?void y.push(e):(w=!0,void t(function(r){if(g=!0,h=r,window.freedom.i18n.messages||(window.freedom.i18n.messages=r),e&&a(e),y.length>0)for(var t=y.length;t--;)a(y[t])}))}function n(e,r,t){var n=new FormValidator(e,r,t);return g||o(n),a(n),n}function d(e,r){var t=null,a=[];if(e.length>0)for(var o=0,n=e.length;o<n;o++){var d=e[o].element,i=d.dataset&&d.dataset.name?d.dataset.name:d.getAttribute("data-name"),l=d.dataset&&d.dataset.errorwrapper?d.dataset.errorwrapper:d.getAttribute("data-errorwrapper");d.classList.add(u.error),l&&(t=document.getElementById(l)),i&&e[o].message&&a.push(e[o].message.replace(e[o].name,i))}return r&&"function"==typeof r&&r(t,a),!1}function i(e){if(e)for(var r=e.elements,t=0,a=r.length;t<a;t++)"INPUT"===r[t].nodeName.toUpperCase()&&r[t].classList.remove(u.error);return!1}function l(e,r,t,a){for(var o="",n=window.freedom.isIe8&&a&&a.innerText?a.innerText:"",d=0,i=r.length;d<i;d++)o+='<div class="'+t+'">'+r[d]+"</div>";return e&&(e.innerHTML=o,a&&(window.freedom.isIe8&&a&&(a.innerText=n),e.appendChild(a)),e.classList.add(u.show)),!1}function s(e){e&&e.parentNode&&e.parentNode.removeChild(e)}function c(e){e&&e.parentNode&&(s(e.parentNode.querySelector("."+u.errorMessage)),window.freedom.removeClass(e.parentNode,u.error))}function f(e){if(e){for(var r=e.querySelectorAll("."+u.errorMessage),t=r.length;t--;)s(r[t]);for(var a=e.querySelectorAll("."+u.error),o=a.length;o--;)window.freedom.removeClass(a[o],u.error)}}function m(e,r){if(f(e),r.length>0)for(var t=r.length,a={};t--;){var o=r[t],n=o.element&&o.element.length>0?o.element[0]:o.element,d="OPTION"===n.nodeName.toUpperCase(),i=n.parentNode,l=n.closest(".tooltip-item"),s=o.message?o.message:"",c=b.cloneNode(!0),m=d?i:n,v=m&&m.title?m.title:o.display,p=m?m.getAttribute("data-group"):null;c.innerHTML=s.replace(o.name,v),i&&i.disabled||n&&n.disabled?(window.freedom.removeClass(l,u.error),n.nextSibling&&0===n.nextSibling.className.indexOf("error-message")&&n.nextSibling.remove()):l&&!a[p]&&(p&&(a[p]=!0),l.appendChild(c),window.freedom.addClass(l,u.error))}return!1}function v(e,t){var a=e.form;e.errors=e.errors.filter(function(e){return e.name!==t.name}),!t.validator||t.validator.disabled||t.validator.readOnly||("radio"===t.type?t.validator.value=a[t.name]&&""!==a[t.name].value?a[t.name].value:void 0:t.validator.value=t.value,"radio"!==t.type&&"checkbox"!==t.type||(t.validator.checked=r(a[t.name],"checked")),t.validator.depends&&"function"==typeof t.validator.depends?t.validator.depends.call(e,t)&&e.validateField(t.validator):t.validator.depends&&"string"==typeof t.validator.depends&&e.conditionals[t.validator.depends]?e.conditionals[t.validator.depends].call(e,t.validator)&&e.validateField(t.validator):e.validateField(t.validator),m(a,e.errors))}function p(e){var t,a=e.form,o=Object.prototype.hasOwnProperty,n=function(r){v(e,r.target)},d=function(r){var t='[name="'+r.target.attributes.name.value+'"]:checked',a=!!document.querySelector(t);a&&v(e,r.target)},i=function(r){v(e,r.target)};for(t in e.fields)if(o.call(e.fields,t)){var l=e.fields[t],s=a[t];if(l.id=s?r(s,"id"):null,l.element=s,l.type=s&&s.length>0?s[0].type:s&&s.type||null,l.value=r(s,"value"),l.checked=r(s,"checked"),!s||"select-one"!==s.type&&"select-multiple"!==s.type||(l.type=s.type),!s||s.length&&"select-one"!==s.type&&"select-multiple"!==s.type){if(s){var c=s.length;if(c>0)for(;c--;)s[c].validator=l}}else s.validator=l;if(s){var f=s.length&&s.item,m=f&&"radio"===s.item(0).type;if(m)for(var p=0;p<s.length;p++){var u=s.item(p);window.freedom.addEvent("blur",u,d),window.freedom.addEvent("click",u,d)}else"checkbox"===s.type?window.freedom.addEvent("change",s,i):(window.freedom.addEvent("blur",s,n),window.freedom.addEvent("change",s,n))}}}var u={error:"error",errorMessage:"error-message",show:"show",ok:"ok",tooltip:"tooltip",wrapper:"tooltip-item"},w=!1,g=!1,h={},y=[],b=document.createElement("span");!function(){window.freedom.nsPubSub.sub("FormValidator.loaded",function(){FormValidator.prototype.validateField=function(e){this._validateField(e)},o(),window.freedom.addClass(b,u.errorMessage),window.freedom.addClass(b,u.tooltip),window.freedom.nsPubSub.pub("formValidationCore.loaded",{classList:u,validate:n,processElementsErrors:d,clearErrors:i,showMessages:l,getMessages:t,removeLabelError:s,showErrors:m,validateFieldsOnBlock:v,validateFieldsOnBlur:p,cleanField:c,clean:f})})}()}(console);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9mb3JtLXZhbGlkYXRpb24vYWxsL2Zvcm0tdmFsaWRhdGlvbi1jb3JlLm1pbi5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJmcmVlZG9tIiwibnNWYWxpZGF0ZSIsImxvZ2dlciIsImF0dHJpYnV0ZVZhbHVlIiwiZWxlbWVudCIsImF0dHJpYnV0ZU5hbWUiLCJsZW5ndGgiLCJ0eXBlIiwiaSIsImVsZW1lbnRMZW5ndGgiLCJjaGVja2VkIiwiZ2V0TWVzc2FnZXMiLCJjYWxsYmFjayIsImkxOG4iLCJtZXNzYWdlcyIsIndhcm4iLCJzZXRNZXNzYWdlcyIsInZhbGlkYXRvciIsInJ1bGUiLCJoYXNPd24iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzZXRNZXNzYWdlIiwibG9hZEJ1bmRsZU1lc3NhZ2VzIiwic2VudCIsInZhbGlkYXRvcnNXYWl0aW5nIiwicHVzaCIsInJlc3BvbnNlIiwibWVzc2FnZXNMb2FkZWQiLCJ2YWxpZGF0ZSIsImZvcm1OYW1lIiwiZGF0YSIsIkZvcm1WYWxpZGF0b3IiLCJwcm9jZXNzRWxlbWVudHNFcnJvcnMiLCJlcnJvcnMiLCJlcnJvcnNXcmFwcGVyIiwibGlzdEVycm9ycyIsIm1heCIsImVsIiwibmFtZSIsImRhdGFzZXQiLCJnZXRBdHRyaWJ1dGUiLCJ3cmFwcGVyIiwiZXJyb3J3cmFwcGVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiZXJyb3IiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibWVzc2FnZSIsInJlcGxhY2UiLCJjbGVhckVycm9ycyIsImZvcm0iLCJpbnB1dHMiLCJlbGVtZW50cyIsIm5vZGVOYW1lIiwidG9VcHBlckNhc2UiLCJyZW1vdmUiLCJzaG93TWVzc2FnZXMiLCJsaXN0IiwiY2xhenoiLCJvdGhlckVsIiwicmVzdWx0IiwidGV4dCIsImlzSWU4IiwiaW5uZXJUZXh0IiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJzaG93IiwicmVtb3ZlTGFiZWxFcnJvciIsImxhYmVsIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiY2xlYW5GaWVsZCIsImZpZWxkIiwicXVlcnlTZWxlY3RvciIsImVycm9yTWVzc2FnZSIsInJlbW92ZUNsYXNzIiwiY2xlYW4iLCJlcnJvckxhYmVscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsIiwiZXJyb3JXcmFwcGVycyIsInciLCJzaG93RXJyb3JzIiwiZ3JvdXBzIiwiaXNPcHRpb24iLCJjbG9zZXN0Iiwic3BhbkVycm9yIiwiZXJyb3JFbGVtZW50IiwiY2xvbmVOb2RlIiwidGFyZ2V0Q2xhc3MiLCJ0aXRsZSIsImRpc3BsYXkiLCJncm91cCIsImRpc2FibGVkIiwibmV4dFNpYmxpbmciLCJjbGFzc05hbWUiLCJpbmRleE9mIiwiYWRkQ2xhc3MiLCJ2YWxpZGF0ZUZpZWxkc09uQmxvY2siLCJ0YXJnZXQiLCJmaWx0ZXIiLCJyZWFkT25seSIsInZhbHVlIiwidW5kZWZpbmVkIiwiZGVwZW5kcyIsInZhbGlkYXRlRmllbGQiLCJjb25kaXRpb25hbHMiLCJ2YWxpZGF0ZUZpZWxkc09uQmx1ciIsImYiLCJpbnB1dEJsdXIiLCJldmVudCIsInJhZGlvQmx1ciIsImlzQ2hlY2tlZFNlbGVjdG9yIiwiYXR0cmlidXRlcyIsImlzQ2hlY2tlZCIsImNoZWNrYm94Qmx1ciIsImZpZWxkcyIsImlkIiwiaXNOb2RlTGlzdCIsIml0ZW0iLCJpc1JhZGlvR3JvdXAiLCJjdXJyZW50UmFkaW8iLCJhZGRFdmVudCIsIm9rIiwidG9vbHRpcCIsImNyZWF0ZUVsZW1lbnQiLCJuc1B1YlN1YiIsInN1YiIsInRoaXMiLCJfdmFsaWRhdGVGaWVsZCIsInB1YiIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiJBQUFBLFlBQ0FBLFFBQU9DLFFBQVFDLFdBQWMsU0FBU0MsR0FnQnBDLFFBQVNDLEdBQWVDLEVBQVNDLEdBQy9CLEtBQUlELEdBQVlBLEVBQVFFLE9BQVMsSUFDVixVQUFwQkYsRUFBUSxHQUFHRyxNQUF3QyxhQUFw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UWtJLFNBQVNDLElBQUksdUJBQXdCLFdBQ2xEakcsY0FBY2IsVUFBVXdGLGNBQWdCLFNBQVNqQyxHQUMvQ3dELEtBQUtDLGVBQWV6RCxJQUV0Qm5ELElBQ0ExQixPQUFPQyxRQUFRcUcsU0FBU1YsRUFBYzdDLEVBQVVnQyxjQUNoRC9FLE9BQU9DLFFBQVFxRyxTQUFTVixFQUFjN0MsRUFBVWtGLFNBQ2hEakksT0FBT0MsUUFBUWtJLFNBQVNJLElBQUksNkJBQzFCeEYsVUFBYUEsRUFDYmYsU0FBWUEsRUFDWkksc0JBQXlCQSxFQUN6QmtCLFlBQWVBLEVBQ2ZPLGFBQWdCQSxFQUNoQmpELFlBQWVBLEVBQ2Y0RCxpQkFBb0JBLEVBQ3BCZSxXQUFjQSxFQUNkZ0Isc0JBQXlCQSxFQUN6QlMscUJBQXdCQSxFQUN4QnBDLFdBQWNBLEVBQ2RLLE1BQVNBLFVBS2Z1RCIsImZpbGUiOiJfcmVmYWN0b3JpbmcvX2NvbXBvbmVudHMvZm9ybS12YWxpZGF0aW9uL2FsbC9mb3JtLXZhbGlkYXRpb24tY29yZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG53aW5kb3cuZnJlZWRvbS5uc1ZhbGlkYXRlID0gKGZ1bmN0aW9uKGxvZ2dlcikge1xuXG4gIHZhciBjbGFzc0xpc3QgPSB7XG4gICAgICAnZXJyb3InOiAnZXJyb3InLFxuICAgICAgJ2Vycm9yTWVzc2FnZSc6ICdlcnJvci1tZXNzYWdlJyxcbiAgICAgICdzaG93JzogJ3Nob3cnLFxuICAgICAgJ29rJzogJ29rJyxcbiAgICAgICd0b29sdGlwJzogJ3Rvb2x0aXAnLFxuICAgICAgJ3dyYXBwZXInOiAndG9vbHRpcC1pdGVtJ1xuICAgIH0sXG4gICAgc2VudCA9IGZhbHNlLFxuICAgIG1lc3NhZ2VzTG9hZGVkID0gZmFsc2UsXG4gICAgbWVzc2FnZXMgPSB7fSxcbiAgICB2YWxpZGF0b3JzV2FpdGluZyA9IFtdLFxuICAgIGVycm9yRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICBmdW5jdGlvbiBhdHRyaWJ1dGVWYWx1ZShlbGVtZW50LCBhdHRyaWJ1dGVOYW1lKSB7XG4gICAgaWYgKGVsZW1lbnQgJiYgKGVsZW1lbnQubGVuZ3RoID4gMCkgJiZcbiAgICAgIChlbGVtZW50WzBdLnR5cGUgPT09ICdyYWRpbycgfHwgZWxlbWVudFswXS50eXBlID09PSAnY2hlY2tib3gnKSkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGVsZW1lbnRMZW5ndGggPSBlbGVtZW50Lmxlbmd0aDsgaSA8IGVsZW1lbnRMZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZWxlbWVudFtpXS5jaGVja2VkKSB7XG4gICAgICAgICAgcmV0dXJuIGVsZW1lbnRbaV1bYXR0cmlidXRlTmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiAoZWxlbWVudCAmJiBlbGVtZW50W2F0dHJpYnV0ZU5hbWVdKSA/IGVsZW1lbnRbYXR0cmlidXRlTmFtZV0gOiBlbGVtZW50O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TWVzc2FnZXMoY2FsbGJhY2spIHtcbiAgICBpZiAoZnJlZWRvbSAmJiB3aW5kb3cuZnJlZWRvbS5pMThuICYmIHdpbmRvdy5mcmVlZG9tLmkxOG4ubWVzc2FnZXMpIHtcbiAgICAgIGNhbGxiYWNrKHdpbmRvdy5mcmVlZG9tLmkxOG4ubWVzc2FnZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2dnZXIud2FybignRnJlZWRvbSBpMThuIHZhbGlkYXRpb24gbWVzc2FnZXMgbm90IGxvYWRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNldE1lc3NhZ2VzKHZhbGlkYXRvcikge1xuICAgIHZhciBydWxlLCBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuICAgIGZvciAocnVsZSBpbiBtZXNzYWdlcykge1xuICAgICAgaWYgKGhhc093bi5jYWxsKG1lc3NhZ2VzLCBydWxlKSkge1xuICAgICAgICB2YWxpZGF0b3Iuc2V0TWVzc2FnZShydWxlLCBtZXNzYWdlc1tydWxlXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbG9hZEJ1bmRsZU1lc3NhZ2VzKHZhbGlkYXRvcikge1xuICAgIGlmIChzZW50KSB7XG4gICAgICB2YWxpZGF0b3JzV2FpdGluZy5wdXNoKHZhbGlkYXRvcik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHNlbnQgPSB0cnVlO1xuICAgIGdldE1lc3NhZ2VzKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBtZXNzYWdlc0xvYWRlZCA9IHRydWU7XG4gICAgICBtZXNzYWdlcyA9IHJlc3BvbnNlO1xuICAgICAgaWYgKCF3aW5kb3cuZnJlZWRvbS5pMThuLm1lc3NhZ2VzKSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLmkxOG4ubWVzc2FnZXMgPSByZXNwb25zZTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWxpZGF0b3IpIHtcbiAgICAgICAgc2V0TWVzc2FnZXModmFsaWRhdG9yKTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWxpZGF0b3JzV2FpdGluZy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciBpID0gdmFsaWRhdG9yc1dhaXRpbmcubGVuZ3RoO1xuICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgc2V0TWVzc2FnZXModmFsaWRhdG9yc1dhaXRpbmdbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiB2YWxpZGF0ZShmb3JtTmFtZSwgZGF0YSwgY2FsbGJhY2spIHtcbiAgICB2YXIgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybU5hbWUsIGRhdGEsIGNhbGxiYWNrKTtcbiAgICBpZiAoIW1lc3NhZ2VzTG9hZGVkKSB7XG4gICAgICBsb2FkQnVuZGxlTWVzc2FnZXModmFsaWRhdG9yKTtcbiAgICB9XG4gICAgc2V0TWVzc2FnZXModmFsaWRhdG9yKTtcbiAgICByZXR1cm4gdmFsaWRhdG9yO1xuICB9XG5cbiAgZnVuY3Rpb24gcHJvY2Vzc0VsZW1lbnRzRXJyb3JzKGVycm9ycywgY2FsbGJhY2spIHtcbiAgICB2YXIgZXJyb3JzV3JhcHBlciA9IG51bGwsXG4gICAgICBsaXN0RXJyb3JzID0gW107XG4gICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbWF4ID0gZXJyb3JzLmxlbmd0aDsgaSA8IG1heDsgaSsrKSB7XG4gICAgICAgIHZhciBlbCA9IGVycm9yc1tpXS5lbGVtZW50LFxuICAgICAgICAgIG5hbWUgPSBlbC5kYXRhc2V0ICYmIGVsLmRhdGFzZXQubmFtZSA/IGVsLmRhdGFzZXQubmFtZSA6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyksXG4gICAgICAgICAgd3JhcHBlciA9IGVsLmRhdGFzZXQgJiYgZWwuZGF0YXNldC5lcnJvcndyYXBwZXIgP1xuICAgICAgICAgICAgZWwuZGF0YXNldC5lcnJvcndyYXBwZXIgOiBlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZXJyb3J3cmFwcGVyJyk7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoY2xhc3NMaXN0LmVycm9yKTtcbiAgICAgICAgaWYgKHdyYXBwZXIpIHtcbiAgICAgICAgICBlcnJvcnNXcmFwcGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQod3JhcHBlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5hbWUgJiYgZXJyb3JzW2ldLm1lc3NhZ2UpIHtcbiAgICAgICAgICBsaXN0RXJyb3JzLnB1c2goZXJyb3JzW2ldLm1lc3NhZ2UucmVwbGFjZShlcnJvcnNbaV0ubmFtZSwgbmFtZSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChjYWxsYmFjayAmJiB0eXBlb2YoY2FsbGJhY2spID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayhlcnJvcnNXcmFwcGVyLCBsaXN0RXJyb3JzKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xlYXJFcnJvcnMoZm9ybSkge1xuICAgIGlmIChmb3JtKSB7XG4gICAgICB2YXIgaW5wdXRzID0gZm9ybS5lbGVtZW50cztcbiAgICAgIGZvciAodmFyIGkgPSAwLCBtYXggPSBpbnB1dHMubGVuZ3RoOyBpIDwgbWF4OyBpKyspIHtcbiAgICAgICAgaWYgKGlucHV0c1tpXS5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpID09PSAnSU5QVVQnKSB7XG4gICAgICAgICAgaW5wdXRzW2ldLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NMaXN0LmVycm9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiBzaG93TWVzc2FnZXMod3JhcHBlciwgbGlzdCwgY2xhenosIG90aGVyRWwpIHtcbiAgICB2YXIgcmVzdWx0ID0gJycsXG4gICAgICB0ZXh0ID0gKHdpbmRvdy5mcmVlZG9tLmlzSWU4ICYmIG90aGVyRWwgJiYgb3RoZXJFbC5pbm5lclRleHQpID8gb3RoZXJFbC5pbm5lclRleHQgOiAnJztcbiAgICBmb3IgKHZhciBpID0gMCwgbWF4ID0gbGlzdC5sZW5ndGg7IGkgPCBtYXg7IGkrKykge1xuICAgICAgcmVzdWx0ICs9ICc8ZGl2IGNsYXNzPVwiJyArIGNsYXp6ICsgJ1wiPicgKyBsaXN0W2ldICsgJzwvZGl2Pic7XG4gICAgfVxuICAgIGlmICh3cmFwcGVyKSB7XG4gICAgICB3cmFwcGVyLmlubmVySFRNTCA9IHJlc3VsdDtcbiAgICAgIGlmIChvdGhlckVsKSB7XG4gICAgICAgIGlmICh3aW5kb3cuZnJlZWRvbS5pc0llOCAmJiBvdGhlckVsKSB7XG4gICAgICAgICAgb3RoZXJFbC5pbm5lclRleHQgPSB0ZXh0O1xuICAgICAgICB9XG4gICAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQob3RoZXJFbCk7XG4gICAgICB9XG4gICAgICB3cmFwcGVyLmNsYXNzTGlzdC5hZGQoY2xhc3NMaXN0LnNob3cpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVMYWJlbEVycm9yKGxhYmVsKSB7XG4gICAgaWYgKGxhYmVsICYmIGxhYmVsLnBhcmVudE5vZGUpIHtcbiAgICAgIGxhYmVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobGFiZWwpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFuRmllbGQoZmllbGQpIHtcbiAgICBpZiAoZmllbGQgJiYgZmllbGQucGFyZW50Tm9kZSkge1xuICAgICAgcmVtb3ZlTGFiZWxFcnJvcihmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy4nICsgY2xhc3NMaXN0LmVycm9yTWVzc2FnZSkpO1xuICAgICAgd2luZG93LmZyZWVkb20ucmVtb3ZlQ2xhc3MoZmllbGQucGFyZW50Tm9kZSwgY2xhc3NMaXN0LmVycm9yKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjbGVhbihmb3JtKSB7XG4gICAgaWYgKGZvcm0pIHtcbiAgICAgIHZhciBlcnJvckxhYmVscyA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnLicgKyBjbGFzc0xpc3QuZXJyb3JNZXNzYWdlKSxcbiAgICAgICAgbCA9IGVycm9yTGFiZWxzLmxlbmd0aDtcbiAgICAgIHdoaWxlIChsLS0pIHtcbiAgICAgICAgcmVtb3ZlTGFiZWxFcnJvcihlcnJvckxhYmVsc1tsXSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBlcnJvcldyYXBwZXJzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIGNsYXNzTGlzdC5lcnJvciksXG4gICAgICAgIHcgPSBlcnJvcldyYXBwZXJzLmxlbmd0aDtcbiAgICAgIHdoaWxlICh3LS0pIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20ucmVtb3ZlQ2xhc3MoZXJyb3JXcmFwcGVyc1t3XSwgY2xhc3NMaXN0LmVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzaG93RXJyb3JzKGZvcm0sIGVycm9ycykge1xuICAgIGNsZWFuKGZvcm0pO1xuXG4gICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICB2YXIgaSA9IGVycm9ycy5sZW5ndGgsXG4gICAgICAgIGdyb3VwcyA9IHt9O1xuICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICB2YXIgZXJyb3IgPSBlcnJvcnNbaV0sXG4gICAgICAgICAgZWwgPSBlcnJvci5lbGVtZW50ICYmIGVycm9yLmVsZW1lbnQubGVuZ3RoID4gMCA/IGVycm9yLmVsZW1lbnRbMF0gOiBlcnJvci5lbGVtZW50LFxuICAgICAgICAgIGlzT3B0aW9uID0gZWwubm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gJ09QVElPTicsXG4gICAgICAgICAgY2xvc2VzdCA9IGVsLnBhcmVudE5vZGUsXG4gICAgICAgICAgd3JhcHBlciA9IGVsLmNsb3Nlc3QoJy50b29sdGlwLWl0ZW0nKSxcbiAgICAgICAgICBtZXNzYWdlID0gZXJyb3IubWVzc2FnZSA/IGVycm9yLm1lc3NhZ2UgOiAnJyxcbiAgICAgICAgICBzcGFuRXJyb3IgPSBlcnJvckVsZW1lbnQuY2xvbmVOb2RlKHRydWUpLFxuICAgICAgICAgIHRhcmdldENsYXNzID0gIWlzT3B0aW9uID8gZWwgOiBjbG9zZXN0LFxuICAgICAgICAgIHRpdGxlID0gdGFyZ2V0Q2xhc3MgJiYgdGFyZ2V0Q2xhc3MudGl0bGUgPyB0YXJnZXRDbGFzcy50aXRsZSA6IGVycm9yLmRpc3BsYXksXG4gICAgICAgICAgZ3JvdXAgPSB0YXJnZXRDbGFzcyA/IHRhcmdldENsYXNzLmdldEF0dHJpYnV0ZSgnZGF0YS1ncm91cCcpIDogbnVsbDtcblxuICAgICAgICBzcGFuRXJyb3IuaW5uZXJIVE1MID0gbWVzc2FnZS5yZXBsYWNlKGVycm9yLm5hbWUsIHRpdGxlKTtcblxuICAgICAgICBpZiAoKGNsb3Nlc3QgJiYgY2xvc2VzdC5kaXNhYmxlZCkgfHwgKGVsICYmIGVsLmRpc2FibGVkKSkge1xuICAgICAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKHdyYXBwZXIsIGNsYXNzTGlzdC5lcnJvcik7XG4gICAgICAgICAgaWYgKGVsLm5leHRTaWJsaW5nICYmIGVsLm5leHRTaWJsaW5nLmNsYXNzTmFtZS5pbmRleE9mKCdlcnJvci1tZXNzYWdlJykgPT09IDApIHtcbiAgICAgICAgICAgIGVsLm5leHRTaWJsaW5nLnJlbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh3cmFwcGVyICYmICFncm91cHNbZ3JvdXBdKSB7XG4gICAgICAgICAgaWYgKGdyb3VwKSB7XG4gICAgICAgICAgICBncm91cHNbZ3JvdXBdID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZChzcGFuRXJyb3IpO1xuICAgICAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKHdyYXBwZXIsIGNsYXNzTGlzdC5lcnJvcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gdmFsaWRhdGVGaWVsZHNPbkJsb2NrKHZhbGlkYXRvciwgdGFyZ2V0KSB7XG4gICAgdmFyIGZvcm0gPSB2YWxpZGF0b3IuZm9ybTtcblxuICAgIHZhbGlkYXRvci5lcnJvcnMgPSB2YWxpZGF0b3IuZXJyb3JzLmZpbHRlcihmdW5jdGlvbihlcnJvcikge1xuICAgICAgcmV0dXJuIGVycm9yLm5hbWUgIT09IHRhcmdldC5uYW1lO1xuICAgIH0pO1xuXG4gICAgaWYgKHRhcmdldC52YWxpZGF0b3IgJiYgIXRhcmdldC52YWxpZGF0b3IuZGlzYWJsZWQgJiYgIXRhcmdldC52YWxpZGF0b3IucmVhZE9ubHkpIHtcbiAgICAgIC8vIFZFUklGWSBWQUxVRVxuICAgICAgaWYgKHRhcmdldC50eXBlID09PSAncmFkaW8nKSB7XG4gICAgICAgIHRhcmdldC52YWxpZGF0b3IudmFsdWUgPSAoZm9ybVt0YXJnZXQubmFtZV0gJiYgZm9ybVt0YXJnZXQubmFtZV0udmFsdWUgIT09ICcnKSA/XG4gICAgICAgICAgZm9ybVt0YXJnZXQubmFtZV0udmFsdWUgOiB1bmRlZmluZWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YXJnZXQudmFsaWRhdG9yLnZhbHVlID0gdGFyZ2V0LnZhbHVlO1xuICAgICAgfVxuICAgICAgLy8gVkVSSUZZIElTIENIRUNLRURcbiAgICAgIGlmICh0YXJnZXQudHlwZSA9PT0gJ3JhZGlvJyB8fCB0YXJnZXQudHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICB0YXJnZXQudmFsaWRhdG9yLmNoZWNrZWQgPSBhdHRyaWJ1dGVWYWx1ZShmb3JtW3RhcmdldC5uYW1lXSwgJ2NoZWNrZWQnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRhcmdldC52YWxpZGF0b3IuZGVwZW5kcyAmJiB0eXBlb2YgdGFyZ2V0LnZhbGlkYXRvci5kZXBlbmRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGlmICh0YXJnZXQudmFsaWRhdG9yLmRlcGVuZHMuY2FsbCh2YWxpZGF0b3IsIHRhcmdldCkpIHtcbiAgICAgICAgICB2YWxpZGF0b3IudmFsaWRhdGVGaWVsZCh0YXJnZXQudmFsaWRhdG9yKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh0YXJnZXQudmFsaWRhdG9yLmRlcGVuZHMgJiYgdHlwZW9mIHRhcmdldC52YWxpZGF0b3IuZGVwZW5kcyA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgdmFsaWRhdG9yLmNvbmRpdGlvbmFsc1t0YXJnZXQudmFsaWRhdG9yLmRlcGVuZHNdKSB7XG4gICAgICAgIGlmICh2YWxpZGF0b3IuY29uZGl0aW9uYWxzW3RhcmdldC52YWxpZGF0b3IuZGVwZW5kc10uY2FsbCh2YWxpZGF0b3IsIHRhcmdldC52YWxpZGF0b3IpKSB7XG4gICAgICAgICAgdmFsaWRhdG9yLnZhbGlkYXRlRmllbGQodGFyZ2V0LnZhbGlkYXRvcik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbGlkYXRvci52YWxpZGF0ZUZpZWxkKHRhcmdldC52YWxpZGF0b3IpO1xuICAgICAgfVxuXG4gICAgICBzaG93RXJyb3JzKGZvcm0sIHZhbGlkYXRvci5lcnJvcnMpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHZhbGlkYXRlRmllbGRzT25CbHVyKHZhbGlkYXRvcikge1xuICAgIHZhciBmb3JtID0gdmFsaWRhdG9yLmZvcm0sIGYsXG4gICAgICBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuICAgICAgaW5wdXRCbHVyID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdmFsaWRhdGVGaWVsZHNPbkJsb2NrKHZhbGlkYXRvciwgZXZlbnQudGFyZ2V0KTtcbiAgICAgIH0sXG4gICAgICByYWRpb0JsdXIgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgaXNDaGVja2VkU2VsZWN0b3IgPSAnW25hbWU9XCInICsgZXZlbnQudGFyZ2V0LmF0dHJpYnV0ZXMubmFtZS52YWx1ZSArICdcIl06Y2hlY2tlZCc7XG4gICAgICAgIHZhciBpc0NoZWNrZWQgPSAhIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaXNDaGVja2VkU2VsZWN0b3IpO1xuICAgICAgICBpZiAoaXNDaGVja2VkKSB7XG4gICAgICAgICAgdmFsaWRhdGVGaWVsZHNPbkJsb2NrKHZhbGlkYXRvciwgZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGNoZWNrYm94Qmx1ciA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhbGlkYXRlRmllbGRzT25CbG9jayh2YWxpZGF0b3IsIGV2ZW50LnRhcmdldCk7XG4gICAgICB9O1xuICAgIGZvciAoZiBpbiB2YWxpZGF0b3IuZmllbGRzKSB7XG4gICAgICBpZiAoaGFzT3duLmNhbGwodmFsaWRhdG9yLmZpZWxkcywgZikpIHtcbiAgICAgICAgdmFyIGZpZWxkID0gdmFsaWRhdG9yLmZpZWxkc1tmXSxcbiAgICAgICAgICBlbGVtZW50ID0gZm9ybVtmXTtcbiAgICAgICAgZmllbGQuaWQgPSBlbGVtZW50ID8gYXR0cmlidXRlVmFsdWUoZWxlbWVudCwgJ2lkJykgOiBudWxsO1xuICAgICAgICBmaWVsZC5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgZmllbGQudHlwZSA9IChlbGVtZW50ICYmIGVsZW1lbnQubGVuZ3RoID4gMCkgP1xuICAgICAgICAgIGVsZW1lbnRbMF0udHlwZSA6IChlbGVtZW50ICYmIGVsZW1lbnQudHlwZSB8fCBudWxsKTtcbiAgICAgICAgZmllbGQudmFsdWUgPSBhdHRyaWJ1dGVWYWx1ZShlbGVtZW50LCAndmFsdWUnKTtcbiAgICAgICAgZmllbGQuY2hlY2tlZCA9IGF0dHJpYnV0ZVZhbHVlKGVsZW1lbnQsICdjaGVja2VkJyk7XG5cbiAgICAgICAgaWYgKGVsZW1lbnQgJiYgKGVsZW1lbnQudHlwZSA9PT0gJ3NlbGVjdC1vbmUnIHx8IGVsZW1lbnQudHlwZSA9PT0gJ3NlbGVjdC1tdWx0aXBsZScpKSB7XG4gICAgICAgICAgZmllbGQudHlwZSA9IGVsZW1lbnQudHlwZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbGVtZW50ICYmXG4gICAgICAgICAgKCFlbGVtZW50Lmxlbmd0aCB8fFxuICAgICAgICAgIGVsZW1lbnQudHlwZSA9PT0gJ3NlbGVjdC1vbmUnIHx8XG4gICAgICAgICAgZWxlbWVudC50eXBlID09PSAnc2VsZWN0LW11bHRpcGxlJykpIHtcbiAgICAgICAgICBlbGVtZW50LnZhbGlkYXRvciA9IGZpZWxkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgZWxlbWVudExlbmd0aCA9IGVsZW1lbnQubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGVsZW1lbnRMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIHdoaWxlIChlbGVtZW50TGVuZ3RoLS0pIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50W2VsZW1lbnRMZW5ndGhdLnZhbGlkYXRvciA9IGZpZWxkO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICB2YXIgaXNOb2RlTGlzdCA9IGVsZW1lbnQubGVuZ3RoICYmIGVsZW1lbnQuaXRlbTtcbiAgICAgICAgICB2YXIgaXNSYWRpb0dyb3VwID0gaXNOb2RlTGlzdCAmJiBlbGVtZW50Lml0ZW0oMCkudHlwZSA9PT0gJ3JhZGlvJztcbiAgICAgICAgICBpZiAoaXNSYWRpb0dyb3VwKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgdmFyIGN1cnJlbnRSYWRpbyA9IGVsZW1lbnQuaXRlbShpKTtcbiAgICAgICAgICAgICAgd2luZG93LmZyZWVkb20uYWRkRXZlbnQoJ2JsdXInLCBjdXJyZW50UmFkaW8sIHJhZGlvQmx1cik7XG4gICAgICAgICAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZEV2ZW50KCdjbGljaycsIGN1cnJlbnRSYWRpbywgcmFkaW9CbHVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnQudHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgd2luZG93LmZyZWVkb20uYWRkRXZlbnQoJ2NoYW5nZScsIGVsZW1lbnQsIGNoZWNrYm94Qmx1cik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZEV2ZW50KCdibHVyJywgZWxlbWVudCwgaW5wdXRCbHVyKTtcbiAgICAgICAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZEV2ZW50KCdjaGFuZ2UnLCBlbGVtZW50LCBpbnB1dEJsdXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIChmdW5jdGlvbigpIHtcbiAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5zdWIoJ0Zvcm1WYWxpZGF0b3IubG9hZGVkJywgZnVuY3Rpb24oKXtcbiAgICAgIEZvcm1WYWxpZGF0b3IucHJvdG90eXBlLnZhbGlkYXRlRmllbGQgPSBmdW5jdGlvbihmaWVsZCkgeyAvKmVzbGludCBuby11bmRlZjogXCJvZmZcIiovXG4gICAgICAgIHRoaXMuX3ZhbGlkYXRlRmllbGQoZmllbGQpO1xuICAgICAgfTtcbiAgICAgIGxvYWRCdW5kbGVNZXNzYWdlcygpO1xuICAgICAgd2luZG93LmZyZWVkb20uYWRkQ2xhc3MoZXJyb3JFbGVtZW50LCBjbGFzc0xpc3QuZXJyb3JNZXNzYWdlKTtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKGVycm9yRWxlbWVudCwgY2xhc3NMaXN0LnRvb2x0aXApO1xuICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIucHViKCdmb3JtVmFsaWRhdGlvbkNvcmUubG9hZGVkJywge1xuICAgICAgICAnY2xhc3NMaXN0JzogY2xhc3NMaXN0LFxuICAgICAgICAndmFsaWRhdGUnOiB2YWxpZGF0ZSxcbiAgICAgICAgJ3Byb2Nlc3NFbGVtZW50c0Vycm9ycyc6IHByb2Nlc3NFbGVtZW50c0Vycm9ycyxcbiAgICAgICAgJ2NsZWFyRXJyb3JzJzogY2xlYXJFcnJvcnMsXG4gICAgICAgICdzaG93TWVzc2FnZXMnOiBzaG93TWVzc2FnZXMsXG4gICAgICAgICdnZXRNZXNzYWdlcyc6IGdldE1lc3NhZ2VzLFxuICAgICAgICAncmVtb3ZlTGFiZWxFcnJvcic6IHJlbW92ZUxhYmVsRXJyb3IsXG4gICAgICAgICdzaG93RXJyb3JzJzogc2hvd0Vycm9ycyxcbiAgICAgICAgJ3ZhbGlkYXRlRmllbGRzT25CbG9jayc6IHZhbGlkYXRlRmllbGRzT25CbG9jayxcbiAgICAgICAgJ3ZhbGlkYXRlRmllbGRzT25CbHVyJzogdmFsaWRhdGVGaWVsZHNPbkJsdXIsXG4gICAgICAgICdjbGVhbkZpZWxkJzogY2xlYW5GaWVsZCxcbiAgICAgICAgJ2NsZWFuJzogY2xlYW5cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KCkpO1xuXG59KGNvbnNvbGUpKTtcbiJdfQ==
